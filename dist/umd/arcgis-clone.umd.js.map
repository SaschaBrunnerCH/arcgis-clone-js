{"version":3,"file":"arcgis-clone.umd.js","sources":["../../node_modules/adlib/lib/getWithDefault.js","../../node_modules/adlib/lib/mapValues.js","../../node_modules/adlib/lib/deepMap.js","../../node_modules/adlib/lib/optional-transform/arborist.js","../../node_modules/adlib/lib/optional-transform/optional.js","../../node_modules/adlib/lib/adlib.js","../../node_modules/@esri/arcgis-rest-request/dist/esm/utils/process-params.js","../../node_modules/@esri/arcgis-rest-request/dist/esm/utils/encode-query-string.js","../../node_modules/@esri/arcgis-rest-request/dist/esm/utils/encode-form-data.js","../../node_modules/@esri/arcgis-rest-request/dist/esm/utils/ArcGISRequestError.js","../../node_modules/@esri/arcgis-rest-request/dist/esm/request.js","../../node_modules/@esri/arcgis-rest-request/dist/esm/utils/warn.js","../../node_modules/@esri/arcgis-rest-request/dist/esm/utils/ErrorTypes.js","../../node_modules/@esri/arcgis-rest-request/dist/esm/utils/clean-url.js","../../node_modules/@esri/arcgis-rest-request/dist/esm/utils/get-portal-url.js","../../node_modules/@esri/arcgis-rest-request/dist/esm/utils/get-portal.js","../../node_modules/@esri/arcgis-rest-request/dist/esm/utils/append-custom-params.js","../../node_modules/@esri/arcgis-rest-request/dist/esm/index.js","../../node_modules/@esri/arcgis-rest-items/dist/esm/helpers.js","../../node_modules/@esri/arcgis-rest-items/dist/esm/add.js","../../node_modules/@esri/arcgis-rest-items/dist/esm/create.js","../../node_modules/@esri/arcgis-rest-items/dist/esm/get.js","../../node_modules/@esri/arcgis-rest-items/dist/esm/protect.js","../../node_modules/@esri/arcgis-rest-items/dist/esm/remove.js","../../node_modules/@esri/arcgis-rest-items/dist/esm/search.js","../../node_modules/@esri/arcgis-rest-items/dist/esm/update.js","../../node_modules/@esri/arcgis-rest-items/dist/esm/index.js","../../node_modules/@esri/arcgis-rest-groups/dist/esm/helpers.js","../../node_modules/@esri/arcgis-rest-groups/dist/esm/create.js","../../node_modules/@esri/arcgis-rest-groups/dist/esm/get.js","../../node_modules/@esri/arcgis-rest-groups/dist/esm/notification.js","../../node_modules/@esri/arcgis-rest-groups/dist/esm/protect.js","../../node_modules/@esri/arcgis-rest-groups/dist/esm/remove.js","../../node_modules/@esri/arcgis-rest-groups/dist/esm/search.js","../../node_modules/@esri/arcgis-rest-groups/dist/esm/update.js","../../node_modules/@esri/arcgis-rest-groups/dist/esm/index.js","../../node_modules/@esri/arcgis-rest-sharing/dist/esm/helpers.js","../../node_modules/@esri/arcgis-rest-sharing/dist/esm/access.js","../../node_modules/@esri/arcgis-rest-sharing/dist/esm/group-sharing.js","../../node_modules/@esri/arcgis-rest-sharing/dist/esm/index.js","../../src/itemTypes/common.ts","../../src/utils/object-helpers.ts","../../src/utils/is-guid.ts","../../src/utils/item-helpers.ts","../../src/itemTypes/dashboard.ts","../../src/itemTypes/group.ts","../../node_modules/@esri/arcgis-rest-feature-service-admin/dist/esm/create.js","../../node_modules/@esri/arcgis-rest-feature-service-admin/dist/esm/addTo.js","../../src/itemTypes/featureservice.ts","../../src/itemTypes/webmap.ts","../../src/itemTypes/storymap.ts","../../src/itemTypes/webappbuilder.ts","../../src/itemTypes/webmappingapplication.ts","../../src/itemTypes/generic.ts","../../src/itemTypes/classifier.ts","../../src/solution.ts","../../src/viewing.ts","../../src/index.ts"],"sourcesContent":["/*    Copyright (c) 2017-2019 Esri Inc.\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n       http://www.apache.org/licenses/LICENSE-2.0\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License. */\n\n/**\n * Return the value of a deep property, using a path.\n */\nexport const getWithDefault = (obj, path, defaultValue = undefined) => path\n  .split('.')\n  .reduce((o, p) => o ? o[p] : defaultValue, obj);\n","/*    Copyright (c) 2017-2019 Esri Inc.\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n       http://www.apache.org/licenses/LICENSE-2.0\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License. */\n\n/**\n * Simply Map over the props of an object\n */\nexport function mapValues (obj, fn) {\n  let keys = Object.keys(obj);\n  // console.info(`keys: ${keys}`);\n  var newObject = keys.reduce(function(acc, currentKey) {\n    // console.log(`   acc: ${JSON.stringify(acc)} curKey: ${currentKey}`);\n    acc[currentKey] = fn(obj[currentKey], currentKey, obj);\n    return acc;\n  }, {});\n  // console.info(`  output: ${JSON.stringify(newObject)}`);\n  return newObject;\n}\n","/*    Copyright (c) 2017-2019 Esri Inc.\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n       http://www.apache.org/licenses/LICENSE-2.0\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License. */\n\n/**\n * Deep Map over the values in an object\n */\nimport { mapValues } from './mapValues';\n\nconst isDate = (v) => v instanceof Date;\n\nconst isFunction = (v) => typeof v === 'function';\n\nconst isObject = (v) => typeof v === 'object';\n\nconst isRegExp = (v) => v instanceof RegExp;\n\nexport function deepMapValues(object, callback, propertyPath) {\n  propertyPath = propertyPath || '';\n  if(Array.isArray(object)){\n    return object.map(deepMapValuesIteratee);\n  }\n  else if(object && isObject(object) && !isDate(object) && !isRegExp(object) && !isFunction(object)){\n    return Object.assign({}, object, mapValues(object, deepMapValuesIteratee));\n  }\n  else {\n    let output = callback(object, propertyPath);\n    return output;\n  }\n\n  function deepMapValuesIteratee(value, key){\n    var valuePath = propertyPath ? propertyPath + '.' + key : key;\n    return deepMapValues(value, callback, valuePath);\n  }\n}\n","/*    Copyright (c) 2017-2019 Esri Inc.\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n       http://www.apache.org/licenses/LICENSE-2.0\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License. */\n\n/**\n * The arborist is responsible for pruning trees with nodes/entries\n * marked with `{{delete:NNN}}`\n *\n * There are multiple exports, mainly to allow for easy testing of the\n * worker functions. Only `arborist` is meant to be used directy\n */\n// import mapValues from 'lodash.mapvalues';\nimport { mapValues } from '../mapValues';\n\nconst isObject = (v) => typeof v === 'object';\n\n/**\n * Trim a tree decorated with `{{delete:NNN}}`\n */\nexport function arborist (object, propertyPath) {\n  propertyPath = propertyPath || '';\n\n  if(Array.isArray(object)){\n    // filter out any nulls...\n    let arrResults = object.map(iteratee).filter((entry) => {\n      // need to ensure entry is actually NULL vs just falsey\n      return entry !== null && entry !== undefined;\n    });\n    return pruneArray(arrResults);\n\n  } if(object && isObject(object) ) {\n\n    return pruneObject(mapValues(object, iteratee));\n\n  } else {\n\n    return getPropertyValue(object, propertyPath);\n  }\n\n  function iteratee(value, key){\n    var valuePath = propertyPath ? propertyPath + '.' + key: key;\n    return arborist(value, valuePath);\n  }\n}\n\n/**\n * Prune an array\n * For all the entries in the array...\n *    if the entry is a naked string and contains `{{delete:NNN}}`\n *      get maximum NNN value\n *    then\n *      if maxN === 0\n *        return an empty array\n *      if maxN > 0\n *        return `{{delete:maxN-1}}`\n *    else\n *      return array\n */\nexport function pruneArray (arrResults) {\n  let res = arrResults;\n  // is any entry a string w/ {{delete}}?\n  let maxLevel = arrResults.reduce((maxLevel, e) => {\n    if (isString(e) && hasDelete(e)) {\n      let lvl = getLevel(e);\n      if (lvl > maxLevel) {\n        maxLevel = lvl;\n      }\n    }\n    return maxLevel;\n  }, -1);\n\n  if (maxLevel > -1) {\n    if (maxLevel === 0) {\n      res = []\n    } else {\n      res = `{{delete:${maxLevel - 1}}}`;\n    }\n  }\n\n  return res;\n}\n\n\nexport function pruneObject (objResults) {\n  // console.log(`   pruneObject:: working on ${JSON.stringify(objResults)}`);\n  let startVal = {obj: {}, maxLevel: -1 };\n  let res;\n  // cook a new clone object, and track the maxLevel\n  let reduction = Object.keys(objResults).reduce((acc, key) => {\n    let val = objResults[key];\n    if (isString(val) && hasDelete(val)) {\n      let lvl = getLevel(val);\n      if (lvl > acc.maxLevel) {\n        acc.maxLevel = lvl;\n      }\n    } else {\n      // only add the prop if it's not a `{{delete:NNN}}`\n      acc.obj[key] = val;\n    }\n    return acc;\n  }, startVal);\n  // if -1, we return entire object...\n  // if 0 we just remove the prop...\n  // if 1 we return undefined...\n  // if > 1 we return the deleteVal\n  if (reduction.maxLevel > 0 ) {\n    if (reduction.maxLevel === 1) {\n      res = undefined;\n    } else {\n      res = `{{delete:${reduction.maxLevel - 1}}}`;\n    }\n  } else {\n    res = reduction.obj;\n  }\n\n  // console.log(`     returning ${JSON.stringify(res)}`);\n  return res;\n}\n\n/**\n * Get a value for a property, handling the `{{delete:NNN}}` syntax\n */\nexport function getPropertyValue (val){\n  let output = val;\n\n  if (typeof val === 'string') {\n    if (hasDelete(val)) {\n      output = getDeleteValue(val);\n    }\n  }\n  return output;\n}\n\n/**\n * Given a string with `{{delete:NNN}}`\n * if NNN === 0 return undefined\n * else return `{{delete:NNN - 1}}`\n */\nfunction getDeleteValue (val) {\n  let output = val;\n  let level = getLevel(val);\n  if (level === 0) {\n    output = undefined;\n  } else {\n    output = `{{delete:${level}}}`;\n  }\n  return output;\n}\n\n/**\n * Extract the level from a `{{delete:NNN}}`\n */\nconst getLevel = (value) => parseInt(value.replace(/{|}/g, '').split(':')[1]);\n\n/**\n * Simple check if a value has `{{delete` in it\n */\nfunction hasDelete (value) {\n  if (value && typeof value === 'string') {\n    return value.indexOf('{{delete') > -1;\n  } else {\n    return false;\n  }\n}\n\nconst isString = (v) => typeof v === 'string';\n","/*   Copyright (c) 2017-2019 Esri Inc.\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n       http://www.apache.org/licenses/LICENSE-2.0\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License. */\n\n/**\n * Optional Transform\n * Supports a declarative syntax for optional template properties\n *\n * {{some.object.key:optional:2}}\n *\n * In this example, if defined, the value of `some.object.key` is used.\n * If not defined, then the optional transform is utilized\n * and a post-processing step is executed which will remove two parent levels\n * from the output structure\n */\n\nexport function optionalTransform(key, value, settings, level = 0) {\n  // console.log(`optional: ${key}, ${value}, ${level}`);\n  let val = value;\n  if (!value) {\n    val = `{{delete:${level}}}`;\n  }\n  return val;\n}\n","/*    Copyright (c) 2017-2019 Esri Inc.\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n       http://www.apache.org/licenses/LICENSE-2.0\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License. */\n\nimport { getWithDefault } from './getWithDefault';\nimport { deepMapValues } from './deepMap';\nimport { arborist } from './optional-transform/arborist';\nimport { optionalTransform } from './optional-transform/optional';\nconst HANDLEBARS = /{{\\s*?[\\w].*?}}/g;\n\nconst isString = (v) => typeof v === 'string';\n\nfunction _swap(parameter, settings, transforms) {\n  let value;\n  // console.info(`_swap: param: ${parameter}`);\n  // Parameters can optionally call transform functions\n  // e.g. \"{{ipsum:translateLatin}}\"\n  // so extract {{<parameter>:<transformFunction>:<key||value>}}\n  let transformCheck = parameter.split(':');\n  if (transformCheck.length > 1) {\n    // we have a request to use a transform...\n    let key = transformCheck[0];\n    let fn = transformCheck[1];\n    // we default to using the value...\n    let param = null;\n    if (transformCheck[2]){\n      param = transformCheck[2];\n    }\n    if(transforms && transforms[fn] && typeof transforms[fn] === 'function') {\n      // get the value from the param\n      value = getWithDefault(settings, key);\n      // transform it...\n      value = transforms[fn](key, value, settings, param);\n    } else {\n      throw new Error(`Attempted to apply non-existant transform ${fn} on ${key} with params ${parameter}`);\n    }\n  } else {\n    // we just get the value\n    value = getWithDefault(settings, parameter);\n  }\n  return value;\n}\n\n/**\n * Does a propertyPath exist on a target\n */\nfunction _propertyPathExists (propertyPath, target) {\n  // remove any transforms\n  let cleanPath = propertyPath.split(':')[0];\n  let value = getWithDefault(target, cleanPath, null);\n  if (value !== null && value !== undefined) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\n// Combine a Template with Settings\nexport function adlib (template, settings, transforms = null) {\n  transforms = transforms || {};\n  if (transforms.optional) {\n    throw new Error('Please do not pass in an `optional` transform; adlib provides that internally.');\n  } else {\n    transforms.optional = optionalTransform;\n  }\n\n  let res = deepMapValues(template, function(templateValue, templatePath){\n    // Only string templates\n    if (!isString(templateValue)) {\n      return templateValue;\n    }\n\n    // When we match \"{{layer.fields..}}\"\n    var settingsValue;\n    var replaceValue = false;\n\n    let hbsEntries = templateValue.match(HANDLEBARS);\n\n    if (hbsEntries && hbsEntries.length) {\n      // console.log(`Got a ${hbsEntries.length} handlebar entries...`);\n      let isStaticValue = false;\n      // iterate over the entries...\n      let values = hbsEntries.map((entry) => {\n        // console.info(`Matched ${entry}...`);\n        // strip off the curlies and trim any leading/trailing whitespace...\n        let path = entry.replace(/{|}/g, '').trim();\n        // check for || which indicate a hiearchy\n        if (path.indexOf('||') > -1) {\n          var paths = path.split('||').map(path => path.trim());\n          let numberOfPaths = paths.length;\n          // here we check each option, in order, and return the first with a value in the hash, OR the last\n          path = paths.find((pathOption, idx) => {\n            // console.info(`Checking to see if ${pathOption} is in settings hash...`);\n            let exists = _propertyPathExists(pathOption, settings);\n            if (!exists) {\n              if ((idx + 1) === numberOfPaths) {\n                // console.info(`Got to last entry, and still did not find anything... assuming ${pathOption} is a static value...`);\n                isStaticValue = true;\n                // check if we can convert this into a number...\n                if (!isNaN(pathOption)) {\n                  pathOption = parseInt(pathOption);\n                }\n                return pathOption;\n              } else {\n                return false;\n              }\n            } else {\n              return pathOption;\n            }\n          });\n        }\n        // setup the return value...\n        let result = {\n          key: entry,\n          value: path\n        }\n        // if we have a valid object path, value comes from _swap\n        if (!isStaticValue) {\n          result.value = _swap(path, settings, transforms) || entry;\n        }\n        // console.info(`Value: ${JSON.stringify(result)}`);\n        return result;\n      });\n\n      values.forEach((v) => {\n        // console.log(`Comparing ${templateValue} with ${v.key}`)\n        if (templateValue === v.key) {\n          // console.log(`template matches key, returning ${v.value}`);\n          // if the value is a string...\n          if (typeof v.value === 'string') {\n            // and it's numeric-ish\n            if(!isNaN(v.value)) {\n              // and has a . in it...\n              if (v.value.indexOf('.') > -1) {\n                // parse as a float...\n                v.value = parseFloat(v.value);\n              } else {\n                // parse as an int\n                v.value = parseInt(v.value);\n              }\n            }\n          }\n          settingsValue = v.value;\n        } else {\n          // a little extra regex dance to match the '||' because '|'\n          // is a Very Special Regex Character and we need to super\n          // escape them for the regex to work\n          // console.log(`KEY ${v.key}`);\n          // console.log(`TEMPLATE ${templateValue}`);\n          templateValue = templateValue.replace(v.key, v.value);\n          // console.log(`template did not match key, interpolating value ${v.value} into template to produce ${templateValue}`);\n        }\n      });\n\n      // if we have a value, let's return that...\n      if (settingsValue) {\n        // console.log(`We found a value so we return it ${settingsValue}`);\n        return settingsValue;\n      } else {\n        // console.log(`We did not find a value so we return the template ${templateValue}`);\n        // but if we don't, lets return the template itself\n        return templateValue;\n      }\n    } else {\n      // console.log(`We did not find a hbs match, so we return the template ${templateValue}`);\n      // no match, return the templateValue...\n      return templateValue;\n    }\n  });\n  return arborist(res);\n}\n\n// read a template and spit out unique values\nexport function listDependencies (template) {\n  if (typeof template !== 'string') {\n    template = JSON.stringify(template)\n  }\n\n  try {\n    return Array.from(\n      new Set(\n        template.match(HANDLEBARS)\n      )\n    )\n    .map(term => {\n      return term.replace(/^{{/g, '').replace(/}}$/g, '').replace(/:.+$/, '')\n      // Node > 10 and browsers support this w/ a lookahead\n      // won't need to use the replace\n      // /(?<={{)[\\w].*?(?=}})/g\n    })\n  } catch (e) {\n    console.error(e)\n  }\n}\n\n","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n* Apache-2.0 */\n/**\n * Checks parameters to see if we should use FormData to send the request\n * @param params The object whose keys will be encoded.\n * @return A boolean indicating if FormData will be required.\n */\nexport function requiresFormData(params) {\n    return Object.keys(params).some(function (key) {\n        var value = params[key];\n        if (!value) {\n            return false;\n        }\n        var type = value.constructor.name;\n        switch (type) {\n            case \"Array\":\n                return false;\n            case \"Object\":\n                return false;\n            case \"Date\":\n                return false;\n            case \"Function\":\n                return false;\n            case \"Boolean\":\n                return false;\n            case \"String\":\n                return false;\n            case \"Number\":\n                return false;\n            default:\n                return true;\n        }\n    });\n}\n/**\n * Converts parameters to the proper representation to send to the ArcGIS REST API.\n * @param params The object whose keys will be encoded.\n * @return A new object with properly encoded values.\n */\nexport function processParams(params) {\n    var newParams = {};\n    Object.keys(params).forEach(function (key) {\n        var param = params[key];\n        if (!param &&\n            param !== 0 &&\n            typeof param !== \"boolean\" &&\n            typeof param !== \"string\") {\n            return;\n        }\n        var type = param.constructor.name;\n        var value;\n        // properly encodes objects, arrays and dates for arcgis.com and other services.\n        // ported from https://github.com/Esri/esri-leaflet/blob/master/src/Request.js#L22-L30\n        // also see https://github.com/Esri/arcgis-rest-js/issues/18:\n        // null, undefined, function are excluded. If you want to send an empty key you need to send an empty string \"\".\n        switch (type) {\n            case \"Array\":\n                // Based on the first element of the array, classify array as an array of objects to be stringified\n                // or an array of non-objects to be comma-separated\n                value =\n                    param[0] &&\n                        param[0].constructor &&\n                        param[0].constructor.name === \"Object\"\n                        ? JSON.stringify(param)\n                        : param.join(\",\");\n                break;\n            case \"Object\":\n                value = JSON.stringify(param);\n                break;\n            case \"Date\":\n                value = param.valueOf();\n                break;\n            case \"Function\":\n                value = null;\n                break;\n            case \"Boolean\":\n                value = param + \"\";\n                break;\n            default:\n                value = param;\n                break;\n        }\n        if (value || value === 0 || typeof value === \"string\") {\n            newParams[key] = value;\n        }\n    });\n    return newParams;\n}\n//# sourceMappingURL=process-params.js.map","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { processParams } from \"./process-params\";\nexport function encodeParam(key, value) {\n    return encodeURIComponent(key) + \"=\" + encodeURIComponent(value);\n}\n/**\n * Encodes the passed object as a query string.\n *\n * @param params An object to be encoded.\n * @returns An encoded query string.\n */\nexport function encodeQueryString(params) {\n    var newParams = processParams(params);\n    return Object.keys(newParams)\n        .map(function (key) {\n        return encodeParam(key, newParams[key]);\n    })\n        .join(\"&\");\n}\n//# sourceMappingURL=encode-query-string.js.map","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { processParams, requiresFormData } from \"./process-params\";\nimport { encodeQueryString } from \"./encode-query-string\";\n/**\n * Encodes parameters in a [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) object in browsers or in a [FormData](https://github.com/form-data/form-data) in Node.js\n *\n * @param params An object to be encoded.\n * @returns The complete [FormData](https://developer.mozilla.org/en-US/docs/Web/API/FormData) object.\n */\nexport function encodeFormData(params) {\n    var useFormData = requiresFormData(params);\n    var newParams = processParams(params);\n    if (useFormData) {\n        var formData_1 = new FormData();\n        Object.keys(newParams).forEach(function (key) {\n            if (typeof Blob !== \"undefined\" && newParams[key] instanceof Blob) {\n                /* To name the Blob:\n                 1. look to an alternate request parameter called 'fileName'\n                 2. see if 'name' has been tacked onto the Blob manually\n                 3. if all else fails, use the request parameter\n                */\n                var filename = newParams[\"fileName\"] || newParams[key].name || key;\n                formData_1.append(key, newParams[key], filename);\n            }\n            else {\n                formData_1.append(key, newParams[key]);\n            }\n        });\n        return formData_1;\n    }\n    else {\n        return encodeQueryString(params);\n    }\n}\n//# sourceMappingURL=encode-form-data.js.map","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n// TypeScript 2.1 no longer allows you to extend built in types. See https://github.com/Microsoft/TypeScript/issues/12790#issuecomment-265981442\n// and https://github.com/Microsoft/TypeScript-wiki/blob/master/Breaking-Changes.md#extending-built-ins-like-error-array-and-map-may-no-longer-work\n//\n// This code is from MDN https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error#Custom_Error_Types.\nvar ArcGISRequestError = /** @class */ (function () {\n    /**\n     * Create a new `ArcGISRequestError`  object.\n     *\n     * @param message - The error message from the API\n     * @param code - The error code from the API\n     * @param response - The original response from the API that caused the error\n     * @param url - The original url of the request\n     * @param options - The original options and parameters of the request\n     */\n    function ArcGISRequestError(message, code, response, url, options) {\n        message = message || \"UNKNOWN_ERROR\";\n        code = code || \"UNKNOWN_ERROR_CODE\";\n        this.name = \"ArcGISRequestError\";\n        this.message =\n            code === \"UNKNOWN_ERROR_CODE\" ? message : code + \": \" + message;\n        this.originalMessage = message;\n        this.code = code;\n        this.response = response;\n        this.url = url;\n        this.options = options;\n    }\n    return ArcGISRequestError;\n}());\nexport { ArcGISRequestError };\nArcGISRequestError.prototype = Object.create(Error.prototype);\nArcGISRequestError.prototype.constructor = ArcGISRequestError;\n//# sourceMappingURL=ArcGISRequestError.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport * as tslib_1 from \"tslib\";\nimport { encodeFormData } from \"./utils/encode-form-data\";\nimport { encodeQueryString } from \"./utils/encode-query-string\";\nimport { requiresFormData } from \"./utils/process-params\";\nimport { ArcGISRequestError } from \"./utils/ArcGISRequestError\";\nexport var NODEJS_DEFAULT_REFERER_HEADER = \"@esri/arcgis-rest-js\";\n/**\n * ```js\n * import { request } from '@esri/arcgis-rest-request';\n * //\n * request('https://www.arcgis.com/sharing/rest')\n *   .then(response) // response.currentVersion === 5.2\n * //\n * request('https://www.arcgis.com/sharing/rest', {\n *   httpMethod: \"GET\"\n * })\n * //\n * request('https://www.arcgis.com/sharing/rest/search', {\n *   params: { q: 'parks' }\n * })\n *   .then(response) // response.total => 78379\n * ```\n * Generic method for making HTTP requests to ArcGIS REST API endpoints.\n *\n * @param url - The URL of the ArcGIS REST API endpoint.\n * @param requestOptions - Options for the request, including parameters relevant to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n */\nexport function request(url, requestOptions) {\n    if (requestOptions === void 0) { requestOptions = { params: { f: \"json\" } }; }\n    var options = tslib_1.__assign({ httpMethod: \"POST\" }, requestOptions);\n    var missingGlobals = [];\n    var recommendedPackages = [];\n    // don't check for a global fetch if a custom implementation was passed through\n    if (!options.fetch && typeof fetch !== \"undefined\") {\n        options.fetch = fetch.bind(Function(\"return this\")());\n    }\n    else {\n        missingGlobals.push(\"`fetch`\");\n        recommendedPackages.push(\"`isomorphic-fetch`\");\n    }\n    if (typeof Promise === \"undefined\") {\n        missingGlobals.push(\"`Promise`\");\n        recommendedPackages.push(\"`es6-promise`\");\n    }\n    if (typeof FormData === \"undefined\") {\n        missingGlobals.push(\"`FormData`\");\n        recommendedPackages.push(\"`isomorphic-form-data`\");\n    }\n    if (!options.fetch ||\n        typeof Promise === \"undefined\" ||\n        typeof FormData === \"undefined\") {\n        throw new Error(\"`arcgis-rest-request` requires global variables for `fetch`, `Promise` and `FormData` to be present in the global scope. You are missing \" + missingGlobals.join(\", \") + \". We recommend installing the \" + recommendedPackages.join(\", \") + \" modules at the root of your application to add these to the global scope. See https://bit.ly/2KNwWaJ for more info.\");\n    }\n    var httpMethod = options.httpMethod, authentication = options.authentication;\n    var params = tslib_1.__assign({ f: \"json\" }, requestOptions.params);\n    var fetchOptions = {\n        method: httpMethod,\n        // ensures behavior mimics XMLHttpRequest. needed to support sending IWA cookies\n        credentials: \"same-origin\"\n    };\n    return (authentication\n        ? authentication.getToken(url, {\n            fetch: options.fetch\n        })\n        : Promise.resolve(\"\"))\n        .then(function (token) {\n        if (token.length) {\n            params.token = token;\n        }\n        if (fetchOptions.method === \"GET\") {\n            // encode the parameters into the query string\n            var queryParams = encodeQueryString(params);\n            // dont append a '?' unless parameters are actually present\n            var urlWithQueryString = queryParams === \"\" ? url : url + \"?\" + encodeQueryString(params);\n            if (options.maxUrlLength &&\n                urlWithQueryString.length > options.maxUrlLength) {\n                // the consumer specified a maximum length for URLs\n                // and this would exceed it, so use post instead\n                fetchOptions.method = \"POST\";\n            }\n            else {\n                // just use GET\n                url = urlWithQueryString;\n            }\n        }\n        if (fetchOptions.method === \"POST\") {\n            fetchOptions.body = encodeFormData(params);\n        }\n        // Mixin headers from request options\n        fetchOptions.headers = tslib_1.__assign({}, requestOptions.headers);\n        /* istanbul ignore next - karma reports coverage on browser tests only */\n        if (typeof window === \"undefined\" && !fetchOptions.headers.referer) {\n            fetchOptions.headers.referer = NODEJS_DEFAULT_REFERER_HEADER;\n        }\n        /* istanbul ignore else blob responses are difficult to make cross platform we will just have to trust the isomorphic fetch will do its job */\n        if (!requiresFormData(params)) {\n            fetchOptions.headers[\"Content-Type\"] =\n                \"application/x-www-form-urlencoded\";\n        }\n        return options.fetch(url, fetchOptions);\n    })\n        .then(function (response) {\n        if (!response.ok) {\n            // server responded w/ an actual error (404, 500, etc)\n            var status_1 = response.status, statusText = response.statusText;\n            throw new ArcGISRequestError(statusText, \"HTTP \" + status_1, response, url, options);\n        }\n        switch (params.f) {\n            case \"json\":\n                return response.json();\n            case \"geojson\":\n                return response.json();\n            case \"html\":\n                return response.text();\n            case \"text\":\n                return response.text();\n            /* istanbul ignore next blob responses are difficult to make cross platform we will just have to trust that isomorphic fetch will do its job */\n            default:\n                return response.blob();\n        }\n    })\n        .then(function (data) {\n        if (params.f === \"json\" || params.f === \"geojson\") {\n            return checkForErrors(data, url, params, options);\n        }\n        else {\n            return data;\n        }\n    });\n}\nvar ArcGISAuthError = /** @class */ (function (_super) {\n    tslib_1.__extends(ArcGISAuthError, _super);\n    /**\n     * Create a new `ArcGISAuthError`  object.\n     *\n     * @param message - The error message from the API\n     * @param code - The error code from the API\n     * @param response - The original response from the API that caused the error\n     * @param url - The original url of the request\n     * @param options - The original options of the request\n     */\n    function ArcGISAuthError(message, code, response, url, options) {\n        if (message === void 0) { message = \"AUTHENTICATION_ERROR\"; }\n        if (code === void 0) { code = \"AUTHENTICATION_ERROR_CODE\"; }\n        var _this = _super.call(this, message, code, response, url, options) || this;\n        _this.name = \"ArcGISAuthError\";\n        _this.message =\n            code === \"AUTHENTICATION_ERROR_CODE\" ? message : code + \": \" + message;\n        return _this;\n    }\n    ArcGISAuthError.prototype.retry = function (getSession, retryLimit) {\n        var _this = this;\n        if (retryLimit === void 0) { retryLimit = 3; }\n        var tries = 0;\n        var retryRequest = function (resolve, reject) {\n            getSession(_this.url, _this.options)\n                .then(function (session) {\n                var newOptions = tslib_1.__assign({}, _this.options, { authentication: session });\n                tries = tries + 1;\n                return request(_this.url, newOptions);\n            })\n                .then(function (response) {\n                resolve(response);\n            })\n                .catch(function (e) {\n                if (e.name === \"ArcGISAuthError\" && tries < retryLimit) {\n                    retryRequest(resolve, reject);\n                }\n                else if (e.name === \"ArcGISAuthError\" && tries >= retryLimit) {\n                    reject(_this);\n                }\n                else {\n                    reject(e);\n                }\n            });\n        };\n        return new Promise(function (resolve, reject) {\n            retryRequest(resolve, reject);\n        });\n    };\n    return ArcGISAuthError;\n}(ArcGISRequestError));\nexport { ArcGISAuthError };\n/**\n * Checks for errors in a JSON response from the ArcGIS REST API. If there are no errors, it will return the `data` passed in. If there is an error, it will throw an `ArcGISRequestError` or `ArcGISAuthError`.\n *\n * @param data The response JSON to check for errors.\n * @param url The url of the original request\n * @param params The parameters of the original request\n * @param options The options of the original request\n * @returns The data that was passed in the `data` parameter\n */\nexport function checkForErrors(response, url, params, options) {\n    // this is an error message from billing.arcgis.com backend\n    if (response.code >= 400) {\n        var message = response.message, code = response.code;\n        throw new ArcGISRequestError(message, code, response, url, options);\n    }\n    // error from ArcGIS Online or an ArcGIS Portal or server instance.\n    if (response.error) {\n        var _a = response.error, message = _a.message, code = _a.code, messageCode = _a.messageCode;\n        var errorCode = messageCode || code || \"UNKNOWN_ERROR_CODE\";\n        if (code === 498 || code === 499 || messageCode === \"GWM_0003\") {\n            throw new ArcGISAuthError(message, errorCode, response, url, options);\n        }\n        throw new ArcGISRequestError(message, errorCode, response, url, options);\n    }\n    // error from a status check\n    if (response.status === \"failed\" || response.status === \"failure\") {\n        var message = void 0;\n        var code = \"UNKNOWN_ERROR_CODE\";\n        try {\n            message = JSON.parse(response.statusMessage).message;\n            code = JSON.parse(response.statusMessage).code;\n        }\n        catch (e) {\n            message = response.statusMessage || response.message;\n        }\n        throw new ArcGISRequestError(message, code, response, url, options);\n    }\n    return response;\n}\n//# sourceMappingURL=request.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Method used internally to surface messages to developers.\n */\nexport function warn(message) {\n    if (console && console.warn) {\n        console.warn.apply(console, [message]);\n    }\n}\n//# sourceMappingURL=warn.js.map","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Enum describing the different errors that might be thrown by a request.\n *\n * ```ts\n * import { request, ErrorTypes } from '@esri/arcgis-rest-request';\n *\n * request(\"...\").catch((e) => {\n *   switch(e.name) {\n *     case ErrorType.ArcGISRequestError:\n *     // handle a general error from the API\n *     break;\n *\n *     case ErrorType.ArcGISAuthError:\n *     // handle an authentication error\n *     break;\n *\n *     default:\n *     // handle some other error (usually a network error)\n *   }\n * });\n * ```\n */\nexport var ErrorTypes;\n(function (ErrorTypes) {\n    ErrorTypes[\"ArcGISRequestError\"] = \"ArcGISRequestError\";\n    ErrorTypes[\"ArcGISAuthError\"] = \"ArcGISAuthError\";\n})(ErrorTypes || (ErrorTypes = {}));\n//# sourceMappingURL=ErrorTypes.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Helper method to ensure that user supplied urls don't include whitespace or a trailing slash.\n */\nexport function cleanUrl(url) {\n    // trim leading and trailing spaces, but not spaces inside the url\n    url = url.trim();\n    // remove the trailing slash to the url if one was included\n    if (url[url.length - 1] === \"/\") {\n        url = url.slice(0, -1);\n    }\n    return url;\n}\n//# sourceMappingURL=clean-url.js.map","import { cleanUrl } from \"./clean-url\";\n/**\n * Helper that returns the appropriate portal url for a given request. `requestOptions.portal` is given\n * precedence over `authentication.portal`. If neither are present, `www.arcgis.com/sharing/rest` is returned.\n *\n * @param requestOptions - Request options that may have authentication manager\n * @returns Portal url to be used in API requests\n */\nexport function getPortalUrl(requestOptions) {\n    if (requestOptions === void 0) { requestOptions = {}; }\n    // use portal in options if specified\n    if (requestOptions.portal) {\n        return cleanUrl(requestOptions.portal);\n    }\n    // if auth was passed, use that portal\n    if (requestOptions.authentication) {\n        // the portal url is already scrubbed in the auth package\n        return requestOptions.authentication.portal;\n    }\n    // default to arcgis.com\n    return \"https://www.arcgis.com/sharing/rest\";\n}\n//# sourceMappingURL=get-portal-url.js.map","/* Copyright (c) 2017 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport * as tslib_1 from \"tslib\";\nimport { request } from \"../request\";\nimport { getPortalUrl } from \"./get-portal-url\";\n/**\n * Get the portal\n * @param requestOptions\n */\nexport function getSelf(requestOptions) {\n    // just delegate to getPortal w/o an id\n    return getPortal(null, requestOptions);\n}\n/**\n * Get a portal by id. If no id is passed, it will call portals/self\n * @param id\n * @param requestOptions\n */\nexport function getPortal(id, requestOptions) {\n    // construct the search url\n    var idOrSelf = id ? id : \"self\";\n    var url = getPortalUrl(requestOptions) + \"/portals/\" + idOrSelf;\n    // default to a GET request\n    var options = tslib_1.__assign({ httpMethod: \"GET\" }, requestOptions);\n    // send the request\n    return request(url, options);\n}\n//# sourceMappingURL=get-portal.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Helper for methods with lots of first order request options to pass through as request parameters.\n */\nexport function appendCustomParams(oldOptions, newOptions) {\n    // at v2.0.0, this should be refactored as a nonmutating method that takes a single argument, mixes in everything and returns a new instance of IRequestOptions\n    // only pass query parameters through in the request, not generic IRequestOptions props\n    Object.keys(oldOptions).forEach(function (key) {\n        if (key !== \"url\" &&\n            key !== \"params\" &&\n            key !== \"authentication\" &&\n            key !== \"httpMethod\" &&\n            key !== \"fetch\" &&\n            key !== \"portal\" &&\n            key !== \"maxUrlLength\" &&\n            key !== \"headers\" &&\n            key !== \"endpoint\" &&\n            key !== \"decodeValues\") {\n            newOptions.params[key] = oldOptions[key];\n        }\n    });\n}\n//# sourceMappingURL=append-custom-params.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nexport * from \"./request\";\nexport * from \"./utils/encode-form-data\";\nexport * from \"./utils/encode-query-string\";\nexport * from \"./utils/warn\";\nexport * from \"./utils/ArcGISRequestError\";\nexport * from \"./utils/ErrorTypes\";\nexport * from \"./utils/process-params\";\nexport * from \"./utils/get-portal\";\nexport * from \"./utils/get-portal-url\";\nexport * from \"./utils/append-custom-params\";\nexport * from \"./utils/clean-url\";\n//# sourceMappingURL=index.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Serialize an item into a json format accepted by the Portal API\n * for create and update operations\n *\n * @param item Item to be serialized\n * @returns a formatted json object to be sent to Portal\n */\nexport function serializeItem(item) {\n    // create a clone so we're not messing with the original\n    var clone = JSON.parse(JSON.stringify(item));\n    // join keywords and tags...\n    var _a = item.typeKeywords, typeKeywords = _a === void 0 ? [] : _a, _b = item.tags, tags = _b === void 0 ? [] : _b;\n    clone.typeKeywords = typeKeywords.join(\", \");\n    clone.tags = tags.join(\", \");\n    // convert .data to .text\n    if (clone.data) {\n        clone.text = JSON.stringify(clone.data);\n        delete clone.data;\n    }\n    // Convert properties to a string\n    if (clone.properties) {\n        clone.properties = JSON.stringify(clone.properties);\n    }\n    return clone;\n}\n/**\n * requestOptions.owner is given priority, requestOptions.item.owner will be checked next. If neither are present, authentication.username will be assumed.\n */\nexport function determineOwner(requestOptions) {\n    if (requestOptions.owner) {\n        return requestOptions.owner;\n    }\n    if (requestOptions.item && requestOptions.item.owner) {\n        return requestOptions.item.owner;\n    }\n    else {\n        return requestOptions.authentication.username;\n    }\n}\n//# sourceMappingURL=helpers.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport * as tslib_1 from \"tslib\";\nimport { request, getPortalUrl } from \"@esri/arcgis-rest-request\";\nimport { determineOwner } from \"./helpers\";\n/**\n * ```js\n * import { addItemJsonData } from '@esri/arcgis-rest-items';\n * //\n * addItemJsonData({\n *   id: '3ef',\n *   data: {}\n *   authentication\n * })\n *   .then(response)\n * ```\n * Send json to an item to be stored as the `/data` resource. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/update-item.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with an object reporting\n *        success/failure and echoing the item id.\n */\nexport function addItemJsonData(requestOptions) {\n    var owner = determineOwner(requestOptions);\n    var url = getPortalUrl(requestOptions) + \"/content/users/\" + owner + \"/items/\" + requestOptions.id + \"/update\";\n    // Portal API requires that the 'data' be stringified and POSTed in\n    // a `text` form field. It can also be sent with the `.create` call by sending\n    // a `.data` property.\n    requestOptions.params = tslib_1.__assign({ text: JSON.stringify(requestOptions.data) }, requestOptions.params);\n    return request(url, requestOptions);\n}\n/**\n * ```js\n * import { addItemData } from '@esri/arcgis-rest-items';\n * //\n * addItemData({\n *   id: '3ef',\n *   data: file,\n *   authentication\n * })\n *   .then(response)\n * ```\n * Send a file or blob to an item to be stored as the `/data` resource. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/update-item.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with an object reporting\n *        success/failure and echoing the item id.\n */\nexport function addItemData(requestOptions) {\n    var owner = determineOwner(requestOptions);\n    var url = getPortalUrl(requestOptions) + \"/content/users/\" + owner + \"/items/\" + requestOptions.id + \"/update\";\n    // Portal API requires that the 'data' be POSTed in a `file` form field.\n    requestOptions.params = tslib_1.__assign({ file: requestOptions.data }, requestOptions.params);\n    return request(url, requestOptions);\n}\n/**\n * ```js\n * import { addItemResource } from '@esri/arcgis-rest-items';\n * //\n * addItemResource({\n *   id: '3ef',\n *   resource: file,\n *   name: 'bigkahuna.jpg',\n *   authentication\n * })\n *   .then(response)\n * ```\n * Add a resource associated with an item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/add-resources.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise to add item resources.\n */\nexport function addItemResource(requestOptions) {\n    var owner = determineOwner(requestOptions);\n    var url = getPortalUrl(requestOptions) + \"/content/users/\" + owner + \"/items/\" + requestOptions.id + \"/addResources\";\n    requestOptions.params = tslib_1.__assign({ file: requestOptions.resource, fileName: requestOptions.name, text: requestOptions.content, access: requestOptions.private ? \"private\" : \"inherit\" }, requestOptions.params);\n    return request(url, requestOptions);\n}\n//# sourceMappingURL=add.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport * as tslib_1 from \"tslib\";\nimport { request, getPortalUrl } from \"@esri/arcgis-rest-request\";\nimport { serializeItem, determineOwner } from \"./helpers\";\n/**\n * ```js\n * import { createFolder } from '@esri/arcgis-rest-items';\n * //\n * createFolder({\n *   title: 'Map Collection',\n *   authentication: userSession\n * })\n *   .then(response)\n * ```\n * Create a folder. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/create-folder.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that resolves with folder details once the folder has been created\n */\nexport function createFolder(requestOptions) {\n    var owner = determineOwner(requestOptions);\n    var baseUrl = getPortalUrl(requestOptions) + \"/content/users/\" + owner;\n    var url = baseUrl + \"/createFolder\";\n    requestOptions.params = tslib_1.__assign({ title: requestOptions.title }, requestOptions.params);\n    return request(url, requestOptions);\n}\n/**\n * ```js\n * import { createItemInFolder } from '@esri/arcgis-rest-items';\n * //\n * createItem({\n *   item: {\n *     title: \"The Amazing Voyage\",\n *     type: \"Web Map\",\n *     data: {}\n *   },\n *   folder: 'underwater',\n *   authentication\n * })\n * ```\n * Create an item in a folder. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/add-item.htm) for more information.\n *\n * @param requestOptions = Options for the request\n */\nexport function createItemInFolder(requestOptions) {\n    var owner = determineOwner(requestOptions);\n    var baseUrl = getPortalUrl(requestOptions) + \"/content/users/\" + owner;\n    var url = baseUrl + \"/addItem\";\n    if (requestOptions.folder) {\n        url = baseUrl + \"/\" + requestOptions.folder + \"/addItem\";\n    }\n    // serialize the item into something Portal will accept\n    requestOptions.params = tslib_1.__assign({}, requestOptions.params, serializeItem(requestOptions.item));\n    return request(url, requestOptions);\n}\n/**\n * ```js\n * import { createItem } from '@esri/arcgis-rest-items';\n * //\n * createItem({\n *   item: {\n *     title: \"The Amazing Voyage\",\n *     type: \"Web Map\",\n *     data: {}\n *   },\n *   authentication\n * })\n * ```\n * Create an Item in the user's root folder. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/add-item.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that creates an item.\n */\nexport function createItem(requestOptions) {\n    // delegate to createItemInFolder placing in the root of the filestore\n    var options = tslib_1.__assign({ folder: null }, requestOptions);\n    return createItemInFolder(options);\n}\n//# sourceMappingURL=create.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport * as tslib_1 from \"tslib\";\nimport { request, getPortalUrl } from \"@esri/arcgis-rest-request\";\n/**\n * Get an item by id. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/item.htm) for more information.\n *\n * @param id - Item Id\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the data from the response.\n */\nexport function getItem(id, requestOptions) {\n    var url = getPortalUrl(requestOptions) + \"/content/items/\" + id;\n    // default to a GET request\n    var options = tslib_1.__assign({ httpMethod: \"GET\" }, requestOptions);\n    return request(url, options);\n}\n/**\n * Get the /data for an item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/item-data.htm) for more information.\n * @param id - Item Id\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the json data for the item.\n */\nexport function getItemData(id, requestOptions) {\n    var url = getPortalUrl(requestOptions) + \"/content/items/\" + id + \"/data\";\n    // default to a GET request\n    var options = tslib_1.__assign({ httpMethod: \"GET\", params: {} }, requestOptions);\n    if (options.file) {\n        options.params.f = null;\n    }\n    return request(url, options);\n}\n/**\n * Get the resources associated with an item\n *\n * @param requestOptions - Options for the request\n * @returns A Promise to get some item resources.\n */\nexport function getItemResources(requestOptions) {\n    var url = getPortalUrl(requestOptions) + \"/content/items/\" + requestOptions.id + \"/resources\";\n    // mix in user supplied params\n    requestOptions.params = tslib_1.__assign({}, requestOptions.params, { num: 1000 });\n    // at v2, the argument signature of this method should match getItemData() and getItemGroups() if requests can be made anonymously\n    return request(url, requestOptions);\n}\n/**\n * ```js\n * import { getItemGroups } from \"@esri/arcgis-rest-items\";\n * //\n * getItemGroups(\"30e5fe3149c34df1ba922e6f5bbf808f\")\n *   .then(response)\n * ```\n * Lists the groups of which the item is a part, only showing the groups that the calling user can access. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/groups.htm) for more information.\n *\n * @param id - The Id of the item to query group association for.\n * @param requestOptions - Options for the request\n * @returns A Promise to get some item groups.\n */\nexport function getItemGroups(id, requestOptions) {\n    var url = getPortalUrl(requestOptions) + \"/content/items/\" + id + \"/groups\";\n    return request(url, requestOptions);\n}\n//# sourceMappingURL=get.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { request, getPortalUrl } from \"@esri/arcgis-rest-request\";\nimport { determineOwner } from \"./helpers\";\n/**\n * Protect an item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/protect.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise to protect an item.\n */\nexport function protectItem(requestOptions) {\n    var owner = determineOwner(requestOptions);\n    var url = getPortalUrl(requestOptions) + \"/content/users/\" + owner + \"/items/\" + requestOptions.id + \"/protect\";\n    return request(url, requestOptions);\n}\n/**\n * Unprotect an item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/unprotect.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise to unprotect an item.\n */\nexport function unprotectItem(requestOptions) {\n    var owner = determineOwner(requestOptions);\n    var url = getPortalUrl(requestOptions) + \"/content/users/\" + owner + \"/items/\" + requestOptions.id + \"/unprotect\";\n    return request(url, requestOptions);\n}\n//# sourceMappingURL=protect.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport * as tslib_1 from \"tslib\";\nimport { request, getPortalUrl } from \"@esri/arcgis-rest-request\";\nimport { determineOwner } from \"./helpers\";\n/**\n * ```js\n * import { removeItem } from '@esri/arcgis-rest-items';\n * //\n * removeItem({\n *   id: \"3ef\",\n *   authentication\n * })\n * ```\n * Delete an item from the portal. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/delete-item.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that deletes an item.\n */\nexport function removeItem(requestOptions) {\n    var owner = determineOwner(requestOptions);\n    var url = getPortalUrl(requestOptions) + \"/content/users/\" + owner + \"/items/\" + requestOptions.id + \"/delete\";\n    return request(url, requestOptions);\n}\n/**\n * Remove a resource associated with an item\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that deletes an item resource.\n */\nexport function removeItemResource(requestOptions) {\n    var owner = determineOwner(requestOptions);\n    var url = getPortalUrl(requestOptions) + \"/content/users/\" + owner + \"/items/\" + requestOptions.id + \"/removeResources\";\n    // mix in user supplied params\n    requestOptions.params = tslib_1.__assign({}, requestOptions.params, { resource: requestOptions.resource });\n    return request(url, requestOptions);\n}\n/**\n * ```js\n * import { removeFolder } from \"@esri/arcgis-rest-items\";\n * //\n * removeFolder({\n *   folderId: \"fe4\",\n *   owner: \"c@sey\",\n *   authentication\n * })\n *   .then(response)\n *\n * ```\n * Delete a non-root folder and all the items it contains. See the [REST\n * Documentation](https://developers.arcgis.com/rest/users-groups-and-items/delete-folder.htm) for\n * more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that deletes a folder\n */\nexport function removeFolder(requestOptions) {\n    var owner = determineOwner(requestOptions);\n    var url = getPortalUrl(requestOptions) + \"/content/users/\" + encodeURIComponent(owner) + \"/\" + requestOptions.folderId + \"/delete\";\n    return request(url, requestOptions);\n}\n//# sourceMappingURL=remove.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport * as tslib_1 from \"tslib\";\nimport { request, getPortalUrl } from \"@esri/arcgis-rest-request\";\n/**\n * ```js\n * import { searchItems } from '@esri/arcgis-rest-items';\n * //\n * searchItems('water')\n *   .then(response) // response.total => 355\n * ```\n * Search a portal for items. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/search.htm) for more information.\n *\n * @param search - A string or RequestOptions object to pass through to the endpoint.\n * @returns A Promise that will resolve with the data from the response.\n */\nexport function searchItems(search) {\n    var options = {\n        httpMethod: \"GET\",\n        params: {}\n    };\n    if (typeof search === \"string\") {\n        options.params.q = search;\n    }\n    else {\n        // mixin user supplied requestOptions with defaults\n        options = tslib_1.__assign({}, options, search);\n        // mixin arbitrary request parameters with search form\n        options.params = tslib_1.__assign({}, search.params, search.searchForm);\n    }\n    // construct the search url\n    var url = getPortalUrl(options) + \"/search\";\n    // send the request\n    return request(url, options);\n}\n//# sourceMappingURL=search.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport * as tslib_1 from \"tslib\";\nimport { request, getPortalUrl } from \"@esri/arcgis-rest-request\";\nimport { serializeItem, determineOwner } from \"./helpers\";\n/**\n * ```js\n * import { updateItem } from '@esri/arcgis-rest-items';\n * //\n * updateItem({\n *   item: {\n *     id: \"3ef\",\n *     description: \"A three hour tour\"\n *   },\n *   authentication\n * })\n *   .then(response)\n * ```\n * Update an Item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/update-item.htm) for more information.\n *\n * @param item - The item to update.\n * @param requestOptions - Options for the request.\n * @returns A Promise that updates an item.\n */\nexport function updateItem(requestOptions) {\n    var owner = determineOwner(requestOptions);\n    var url = getPortalUrl(requestOptions) + \"/content/users/\" + owner + \"/items/\" + requestOptions.item.id + \"/update\";\n    // serialize the item into something Portal will accept\n    requestOptions.params = tslib_1.__assign({}, requestOptions.params, serializeItem(requestOptions.item));\n    return request(url, requestOptions);\n}\n/**\n * ```js\n * import { updateItemResource } from '@esri/arcgis-rest-items';\n * //\n * updateItemResource({\n *   id: '3ef',\n *   resource: file,\n *   name: 'bigkahuna.jpg',\n *   authentication\n * })\n *   .then(response)\n * ```\n * Update a resource associated with an item. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/update-resources.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that updates an item resource.\n */\nexport function updateItemResource(requestOptions) {\n    var owner = determineOwner(requestOptions);\n    var url = getPortalUrl(requestOptions) + \"/content/users/\" + owner + \"/items/\" + requestOptions.id + \"/updateResources\";\n    // mix in user supplied params\n    requestOptions.params = tslib_1.__assign({ file: requestOptions.resource, fileName: requestOptions.name, text: requestOptions.content }, requestOptions.params);\n    // only override whatever access was specified previously if 'private' was passed explicitly\n    if (typeof requestOptions.private !== \"undefined\") {\n        requestOptions.params.access = requestOptions.private\n            ? \"private\"\n            : \"inherit\";\n    }\n    return request(url, requestOptions);\n}\n/**\n * ```js\n * import { moveItem } from '@esri/arcgis-rest-items';\n * //\n * moveItem({\n *   itemId: \"3ef\",\n *   folderId: \"7c5\",\n *   authentication: userSession\n * })\n * ```\n * Move an item to a folder. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/move-item.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that resolves with owner and folder details once the move has been completed\n */\nexport function moveItem(requestOptions) {\n    var owner = determineOwner(requestOptions);\n    var url = getPortalUrl(requestOptions) + \"/content/users/\" + owner + \"/items/\" + requestOptions.itemId + \"/move\";\n    var folderId = requestOptions.folderId;\n    if (!folderId) {\n        folderId = \"/\";\n    }\n    requestOptions.params = tslib_1.__assign({ folder: folderId }, requestOptions.params);\n    return request(url, requestOptions);\n}\n//# sourceMappingURL=update.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nexport * from \"./add\";\nexport * from \"./create\";\nexport * from \"./get\";\nexport * from \"./protect\";\nexport * from \"./remove\";\nexport * from \"./search\";\nexport * from \"./update\";\nexport * from \"./helpers\";\n//# sourceMappingURL=index.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\n/**\n * Serialize a group into a json format accepted by the Portal API\n * for create and update operations\n *\n * @param group IGroup to be serialized\n * @returns a formatted JSON object to be sent to Portal\n * @private\n */\nexport function serializeGroup(group) {\n    // create a clone so we're not messing with the original\n    var clone = JSON.parse(JSON.stringify(group));\n    // join and tags...\n    var _a = group.tags, tags = _a === void 0 ? [] : _a;\n    clone.tags = tags.join(\", \");\n    return clone;\n}\n//# sourceMappingURL=helpers.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport * as tslib_1 from \"tslib\";\nimport { request, getPortalUrl } from \"@esri/arcgis-rest-request\";\nimport { serializeGroup } from \"./helpers\";\n/**\n * ```js\n * import { createGroup } from \"@esri/arcgis-rest-groups\";\n * //\n * createGroup({\n *   group: {\n *     title: \"No Homers\",\n *     access: \"public\"\n *   },\n *   authentication\n * })\n *   .then(response)\n * ```\n * Create a new Group. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/create-group.htm) for more information.\n *\n * Note: The group name must be unique within the user's organization.\n * @param requestOptions  - Options for the request, including a group object\n * @returns A Promise that will resolve with the success/failure status of the request\n */\nexport function createGroup(requestOptions) {\n    var url = getPortalUrl(requestOptions) + \"/community/createGroup\";\n    var options = tslib_1.__assign({}, requestOptions);\n    // serialize the group into something Portal will accept\n    options.params = serializeGroup(requestOptions.group);\n    return request(url, options);\n}\n//# sourceMappingURL=create.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport * as tslib_1 from \"tslib\";\nimport { request, getPortalUrl } from \"@esri/arcgis-rest-request\";\n/**\n * ```js\n * import { getGroup } from \"@esri/arcgis-rest-groups\";\n * //\n * getGroup(\"fxb988\") // id\n *   .then(response)\n * ```\n * Fetch a group using its id. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/group.htm) for more information.\n *\n * @param id - Group Id\n * @param requestOptions  - Options for the request\n * @returns  A Promise that will resolve with the data from the response.\n */\nexport function getGroup(id, requestOptions) {\n    var url = getPortalUrl(requestOptions) + \"/community/groups/\" + id;\n    // default to a GET request\n    var options = tslib_1.__assign({ httpMethod: \"GET\" }, requestOptions);\n    return request(url, options);\n}\n/**\n * Returns the content of a Group. Since the group may contain 1000s of items\n * the requestParams allow for paging.\n * @param id - Group Id\n * @param requestOptions  - Options for the request, including paging parameters.\n * @returns  A Promise that will resolve with the content of the group.\n */\nexport function getGroupContent(id, requestOptions) {\n    var url = getPortalUrl(requestOptions) + \"/content/groups/\" + id;\n    // default to a GET request\n    var options = tslib_1.__assign({ httpMethod: \"GET\" }, { params: { start: 1, num: 100 } }, requestOptions);\n    // is this the most concise way to mixin with the defaults above?\n    if (requestOptions && requestOptions.paging) {\n        options.params = tslib_1.__assign({}, requestOptions.paging);\n    }\n    return request(url, options);\n}\n/**\n * Get the usernames of the admins and members. Does not return actual 'User' objects. Those must be\n * retrieved via separate calls to the User's API.\n * @param id - Group Id\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with arrays of the group admin usernames and the member usernames\n */\nexport function getGroupUsers(id, requestOptions) {\n    var url = getPortalUrl(requestOptions) + \"/community/groups/\" + id + \"/users\";\n    // default to a GET request\n    var options = tslib_1.__assign({ httpMethod: \"GET\" }, requestOptions);\n    return request(url, options);\n}\n//# sourceMappingURL=get.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport * as tslib_1 from \"tslib\";\nimport { request, getPortalUrl } from \"@esri/arcgis-rest-request\";\n/**\n * ```js\n * import { createGroupNotification } from '@esri/arcgis-rest-groups';\n * // send an email to an entire group\n * createGroupNotification({\n *   authentication: UserSession,\n *   subject: \"hello\",\n *   message: \"world!\",\n *   id: groupId\n * })\n * ```\n * Create a group notification.\n *\n * @param requestOptions - Options for the request\n *\n * @returns A Promise that will resolve with the success/failure status of the request\n */\nexport function createGroupNotification(requestOptions) {\n    var url = getPortalUrl(requestOptions) + \"/community/groups/\" + requestOptions.id + \"/createNotification\";\n    var options = tslib_1.__assign({ params: tslib_1.__assign({ subject: requestOptions.subject, message: requestOptions.message, users: requestOptions.users, notificationChannelType: requestOptions.notificationChannelType || \"email\", clientId: requestOptions.clientId, silentNotification: requestOptions.silentNotification, notifyAll: !requestOptions.users || requestOptions.users.length === 0 }, requestOptions.params) }, requestOptions);\n    return request(url, options);\n}\n//# sourceMappingURL=notification.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport * as tslib_1 from \"tslib\";\nimport { request, getPortalUrl } from \"@esri/arcgis-rest-request\";\n/**\n * ```js\n * import { protectGroup } from '@esri/arcgis-rest-groups';\n * //\n * protectGroup({\n *   id: groupId,\n *   authentication\n * })\n *   .then(response)\n * ```\n * Protect a group to avoid accidental deletion. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/protect-group.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the success/failure status of the request\n */\nexport function protectGroup(requestOptions) {\n    var url = getPortalUrl(requestOptions) + \"/community/groups/\" + requestOptions.id + \"/protect\";\n    var options = tslib_1.__assign({}, requestOptions);\n    return request(url, options);\n}\n/**\n * Unprotect a Group.\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the success/failure status of the request\n */\nexport function unprotectGroup(requestOptions) {\n    var url = getPortalUrl(requestOptions) + \"/community/groups/\" + requestOptions.id + \"/unprotect\";\n    var options = tslib_1.__assign({}, requestOptions);\n    return request(url, options);\n}\n//# sourceMappingURL=protect.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport * as tslib_1 from \"tslib\";\nimport { request, getPortalUrl } from \"@esri/arcgis-rest-request\";\n/**\n * ```js\n * import { removeGroup } from '@esri/arcgis-rest-groups';\n * //\n * removeGroup({\n *   id: groupId,\n *   authentication\n * })\n *   .then(response)\n * ```\n * Delete a group. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/delete-group.htm) for more information.\n *\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the success/failure status of the request\n */\nexport function removeGroup(requestOptions) {\n    var url = getPortalUrl(requestOptions) + \"/community/groups/\" + requestOptions.id + \"/delete\";\n    var options = tslib_1.__assign({}, requestOptions);\n    return request(url, options);\n}\n//# sourceMappingURL=remove.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport * as tslib_1 from \"tslib\";\nimport { request, getPortalUrl } from \"@esri/arcgis-rest-request\";\n/**\n *\n * ```js\n * import { searchGroups } from '@esri/arcgis-rest-groups';\n * //\n * searchGroups({\n *   q:'water'\n * })\n *   .then(response) // response.results.total => 355\n * ```\n * Search a portal for groups. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/group-search.htm) for more information.\n *\n * @param searchForm - Search request\n * @param requestOptions - Options for the request\n * @returns A Promise that will resolve with the data from the response.\n */\nexport function searchGroups(searchForm, requestOptions) {\n    // construct the search url\n    var url = getPortalUrl(requestOptions) + \"/community/groups\";\n    // default to a GET\n    var options = tslib_1.__assign({ httpMethod: \"GET\" }, requestOptions);\n    options.params = tslib_1.__assign({}, searchForm);\n    // send the request\n    return request(url, options);\n}\n//# sourceMappingURL=search.js.map","/* Copyright (c) 2017-2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport * as tslib_1 from \"tslib\";\nimport { request, getPortalUrl } from \"@esri/arcgis-rest-request\";\nimport { serializeGroup } from \"./helpers\";\n/**\n * ```js\n * import { updateGroup } from '@esri/arcgis-rest-groups';\n * //\n * updateGroup({\n *   group: { id: \"fgr344\", title: \"new\" }\n * })\n *   .then(response)\n * ```\n * Update the properties of a group. See the [REST Documentation](https://developers.arcgis.com/rest/users-groups-and-items/update-group.htm) for more information.\n *\n * @param requestOptions - Options for the request, including the group\n * @returns A Promise that will resolve with the success/failure status of the request\n */\nexport function updateGroup(requestOptions) {\n    var url = getPortalUrl(requestOptions) + \"/community/groups/\" + requestOptions.group.id + \"/update\";\n    var options = tslib_1.__assign({}, requestOptions);\n    // serialize the group into something Portal will accept\n    options.params = serializeGroup(requestOptions.group);\n    return request(url, options);\n}\n//# sourceMappingURL=update.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nexport * from \"./create\";\nexport * from \"./get\";\nexport * from \"./helpers\";\nexport * from \"./notification\";\nexport * from \"./protect\";\nexport * from \"./remove\";\nexport * from \"./search\";\nexport * from \"./update\";\n//# sourceMappingURL=index.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport { getPortalUrl } from \"@esri/arcgis-rest-request\";\nimport { getGroup } from \"@esri/arcgis-rest-groups\";\nexport function getSharingUrl(requestOptions) {\n    var username = requestOptions.authentication.username;\n    var owner = requestOptions.owner || username;\n    return getPortalUrl(requestOptions) + \"/content/users/\" + encodeURIComponent(owner) + \"/items/\" + requestOptions.id + \"/share\";\n}\nexport function isItemOwner(requestOptions) {\n    var username = requestOptions.authentication.username;\n    var owner = requestOptions.owner || username;\n    return owner === username;\n}\n/**\n * Check it the user is a full org_admin\n * @param requestOptions\n * @returns Promise resolving in a boolean indicating if the user is an ArcGIS Organization administrator\n */\nexport function isOrgAdmin(requestOptions) {\n    var session = requestOptions.authentication;\n    return session.getUser(requestOptions).then(function (user) {\n        if (!user || user.role !== \"org_admin\") {\n            return false;\n        }\n        else {\n            return true;\n        }\n    });\n}\n/**\n * Get the User Membership for a particular group. Use this if all you have is the groupId.\n * If you have the group object, check the `userMembership.memberType` property instead of calling this method.\n *\n * @param IGroupIdRequestOptions options to pass through in the request\n * @returns A Promise that resolves with \"owner\" | \"admin\" | \"member\" | \"nonmember\"\n */\nexport function getUserMembership(requestOptions) {\n    // fetch the group...\n    return getGroup(requestOptions.groupId, requestOptions)\n        .then(function (group) {\n        return group.userMembership.memberType;\n    })\n        .catch(function () {\n        return \"nonmember\";\n    });\n}\n//# sourceMappingURL=helpers.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport * as tslib_1 from \"tslib\";\nimport { request } from \"@esri/arcgis-rest-request\";\nimport { isItemOwner, getSharingUrl, isOrgAdmin } from \"./helpers\";\n/**\n * ```js\n * import { setItemAccess } from '@esri/arcgis-rest-sharing';\n * //\n * setItemAccess({\n *   id: \"abc123\",\n *   access: \"public\", // 'org' || 'private'\n *   authentication: session\n * })\n * ```\n * Change who is able to access an item.\n *\n * @param requestOptions - Options for the request.\n * @returns A Promise that will resolve with the data from the response.\n */\nexport function setItemAccess(requestOptions) {\n    var url = getSharingUrl(requestOptions);\n    if (isItemOwner(requestOptions)) {\n        // if the user owns the item, proceed\n        return updateItemAccess(url, requestOptions);\n    }\n    else {\n        // otherwise we need to check to see if they are an organization admin\n        return isOrgAdmin(requestOptions).then(function (admin) {\n            if (admin) {\n                return updateItemAccess(url, requestOptions);\n            }\n            else {\n                // if neither, updating the sharing isnt possible\n                throw Error(\"This item can not be shared by \" + requestOptions.authentication.username + \". They are neither the item owner nor an organization admin.\");\n            }\n        });\n    }\n}\nfunction updateItemAccess(url, requestOptions) {\n    requestOptions.params = tslib_1.__assign({ org: false, everyone: false }, requestOptions.params);\n    // if the user wants to make the item private, it needs to be unshared from any/all groups as well\n    if (requestOptions.access === \"private\") {\n        requestOptions.params.groups = \" \";\n    }\n    if (requestOptions.access === \"org\") {\n        requestOptions.params.org = true;\n    }\n    // if sharing with everyone, share with the entire organization as well.\n    if (requestOptions.access === \"public\") {\n        requestOptions.params.org = true;\n        requestOptions.params.everyone = true;\n    }\n    return request(url, requestOptions);\n}\n//# sourceMappingURL=access.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport * as tslib_1 from \"tslib\";\nimport { request, getPortalUrl } from \"@esri/arcgis-rest-request\";\nimport { isOrgAdmin, getUserMembership } from \"./helpers\";\n/**\n * ```js\n * import { shareItemWithGroup } from '@esri/arcgis-rest-sharing';\n * //\n * shareItemWithGroup({\n *   id: \"abc123\",\n *   groupId: \"xyz987\",\n *   authentication\n * })\n * ```\n * Share an item with a group, either as an [item owner](https://developers.arcgis.com/rest/users-groups-and-items/share-item-as-item-owner-.htm), [group admin]((https://developers.arcgis.com/rest/users-groups-and-items/share-item-as-group-admin-.htm)) or organization admin.\n *\n * @param requestOptions - Options for the request.\n * @returns A Promise that will resolve with the data from the response.\n */\nexport function shareItemWithGroup(requestOptions) {\n    return changeGroupSharing(tslib_1.__assign({ action: \"share\" }, requestOptions));\n}\n/**\n * Stop sharing an item with a group, either as an [item owner](https://developers.arcgis.com/rest/users-groups-and-items/unshare-item-as-item-owner-.htm), [group admin]((https://developers.arcgis.com/rest/users-groups-and-items/unshare-item-as-group-admin-.htm)) or organization admin.\n *\n * ```js\n * import { unshareItemWithGroup } from '@esri/arcgis-rest-sharing';\n *\n * unshareItemWithGroup({\n *   id: \"abc123\",\n *   groupId: \"xyz987\",\n *   authentication: session\n * })\n * ```\n *\n * @param requestOptions - Options for the request.\n * @returns A Promise that will resolve with the data from the response.\n */\nexport function unshareItemWithGroup(requestOptions) {\n    return changeGroupSharing(tslib_1.__assign({ action: \"unshare\" }, requestOptions));\n}\n/**\n * @param requestOptions - Options for the request.\n * @returns A Promise that will resolve with the data from the response.\n */\nfunction changeGroupSharing(requestOptions) {\n    var username = requestOptions.authentication.username;\n    var owner = requestOptions.owner || username;\n    return isOrgAdmin(requestOptions).then(function (admin) {\n        var resultProp = requestOptions.action === \"share\" ? \"notSharedWith\" : \"notUnsharedFrom\";\n        // check if the item has already been shared with the group...\n        return isItemSharedWithGroup(requestOptions).then(function (result) {\n            // console.log(admin);\n            // if we are sharing and result is true OR we are unsharing and result is false... short circuit\n            if ((requestOptions.action === \"share\" && result === true) ||\n                (requestOptions.action === \"unshare\" && result === false)) {\n                // and send back the same response structure ArcGIS Online would\n                var response = { itemId: requestOptions.id, shortcut: true };\n                response[resultProp] = [];\n                return response;\n            }\n            else {\n                // next check to ensure the user is a member of the group\n                return getUserMembership(requestOptions)\n                    .then(function (membership) {\n                    if (membership === \"nonmember\") {\n                        // abort and reject promise\n                        throw Error(\"This item can not be \" + requestOptions.action + \"d by \" + username + \" as they are not a member of the specified group \" + requestOptions.groupId + \".\");\n                    }\n                    else {\n                        // if orgAdmin or owner (and member of group) share using the owner url\n                        if (owner === username || admin) {\n                            return getPortalUrl(requestOptions) + \"/content/users/\" + owner + \"/items/\" + requestOptions.id + \"/\" + requestOptions.action;\n                        }\n                        else {\n                            // if they are a group admin/owner, use the bare item url\n                            if (membership === \"admin\" || membership === \"owner\") {\n                                return getPortalUrl(requestOptions) + \"/content/items/\" + requestOptions.id + \"/\" + requestOptions.action;\n                            }\n                            else {\n                                // otherwise abort\n                                throw Error(\"This item can not be \" + requestOptions.action + \"d by \" + username + \" as they are neither the owner, a groupAdmin of \" + requestOptions.groupId + \", nor an org_admin.\");\n                            }\n                        }\n                    }\n                })\n                    .then(function (url) {\n                    // now its finally time to do the sharing\n                    requestOptions.params = {\n                        groups: requestOptions.groupId,\n                        confirmItemControl: requestOptions.confirmItemControl\n                    };\n                    // dont mixin to ensure that old query parameters from the search request arent included\n                    return request(url, requestOptions);\n                })\n                    .then(function (sharingResponse) {\n                    if (sharingResponse[resultProp].length) {\n                        throw Error(\"Item \" + requestOptions.id + \" could not be \" + requestOptions.action + \"d to group \" + requestOptions.groupId + \".\");\n                    }\n                    else {\n                        // all is well\n                        return sharingResponse;\n                    }\n                });\n            } // else\n        }); // then\n    });\n}\n/**\n * Find out whether or not an item is already shared with a group.\n *\n * @param requestOptions - Options for the request.\n * @returns A Promise that will resolve with the data from the response.\n */\nfunction isItemSharedWithGroup(requestOptions) {\n    var query = {\n        q: \"id: \" + requestOptions.id + \" AND group: \" + requestOptions.groupId,\n        start: 1,\n        num: 10,\n        sortField: \"title\"\n    };\n    // we need to append some params into requestOptions, so make a clone\n    // instead of mutating the params on the inbound requestOptions object\n    var options = tslib_1.__assign({}, requestOptions);\n    // instead of calling out to \"@esri/arcgis-rest-items, make the request manually to forgoe another dependency\n    options.params = tslib_1.__assign({}, query, requestOptions.params);\n    var url = getPortalUrl(options) + \"/search\";\n    return request(url, options).then(function (searchResponse) {\n        // if there are no search results at all, we know the item hasnt already been shared with the group\n        if (searchResponse.total === 0) {\n            return false;\n        }\n        else {\n            var sharedItem_1;\n            // otherwise loop through and search for the id\n            searchResponse.results.some(function (item) {\n                var matchedItem = item.id === requestOptions.id;\n                if (matchedItem) {\n                    sharedItem_1 = item;\n                }\n                return matchedItem;\n            });\n            if (sharedItem_1) {\n                return true;\n            }\n            else {\n                return false;\n            }\n        }\n    });\n}\n//# sourceMappingURL=group-sharing.js.map","/* Copyright (c) 2018 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nexport * from \"./access\";\nexport * from \"./group-sharing\";\n//# sourceMappingURL=index.js.map","/*\r\n | Copyright 2018 Esri\r\n |\r\n | Licensed under the Apache License, Version 2.0 (the \"License\");\r\n | you may not use this file except in compliance with the License.\r\n | You may obtain a copy of the License at\r\n |\r\n |    http://www.apache.org/licenses/LICENSE-2.0\r\n |\r\n | Unless required by applicable law or agreed to in writing, software\r\n | distributed under the License is distributed on an \"AS IS\" BASIS,\r\n | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n | See the License for the specific language governing permissions and\r\n | limitations under the License.\r\n */\r\n\r\nimport { ArcGISRequestError } from \"@esri/arcgis-rest-request\";\r\nimport * as sharing from \"@esri/arcgis-rest-sharing\";\r\nimport * as items from \"@esri/arcgis-rest-items\";\r\nimport { IUserRequestOptions } from \"@esri/arcgis-rest-auth\";\r\n\r\nimport { IProgressUpdate } from \"../interfaces\";\r\n\r\n// -------------------------------------------------------------------------------------------------------------------//\r\n\r\n/**\r\n * A parameterized server name to replace the organization URL in a Web Mapping Application's URL to\r\n * itself; name has to be acceptable to AGOL, otherwise it discards the URL, so substitution must be\r\n * made before attempting to create the item.\r\n * @protected\r\n */\r\nexport const PLACEHOLDER_SERVER_NAME:string = \"{{organization.portalBaseUrl}}\";\r\n\r\nexport function doCommonTemplatizations (\r\n  itemTemplate: any\r\n): void {\r\n  // Use the initiative's extent\r\n  if (itemTemplate.item.extent) {\r\n    itemTemplate.item.extent = \"{{initiative.extent:optional}}\";\r\n  }\r\n\r\n  // Templatize the item's id\r\n  itemTemplate.item.id = templatize(itemTemplate.item.id);\r\n}\r\n\r\n/**\r\n * Publishes an item and its data as an AGOL item.\r\n *\r\n * @param item Item's `item` section\r\n * @param data Item's `data` section\r\n * @param requestOptions Options for the request\r\n * @param folderId Id of folder to receive item; null indicates that the item goes into the root\r\n *                 folder; ignored for Group item type\r\n * @param access Access to set for item: 'public', 'org', 'private'\r\n * @return A promise that will resolve with an object reporting success and the Solution id\r\n */\r\nexport function createItemWithData (\r\n  item: any,\r\n  data: any,\r\n  requestOptions: IUserRequestOptions,\r\n  folderId = null as string,\r\n  access = \"private\"\r\n): Promise<items.IItemUpdateResponse> {\r\n  return new Promise((resolve, reject) => {\r\n    const options:items.IItemAddRequestOptions = {\r\n      item,\r\n      folder: folderId,\r\n      ...requestOptions\r\n    };\r\n    if (data) {\r\n      options.item.text = data;\r\n    }\r\n\r\n    // Create item and add its optional data section\r\n    items.createItemInFolder(options)\r\n    .then(\r\n      results => {\r\n        // Clear property used to create item's data\r\n        delete item.text;\r\n\r\n        if (access !== \"private\") {  // set access if it is not AGOL default\r\n          // Set the access manually since the access value in createItem appears to be ignored\r\n          const options1 = {\r\n            id: results.id,\r\n            access,\r\n            ...requestOptions as sharing.ISetAccessRequestOptions\r\n          };\r\n          sharing.setItemAccess(options1)\r\n          .then(\r\n            results2 => {\r\n              resolve({\r\n                success: true,\r\n                id: results2.itemId\r\n              })\r\n            },\r\n            () => reject({ success: false })\r\n          );\r\n        } else {\r\n          resolve({\r\n            success: true,\r\n            id: results.id\r\n          })\r\n        }\r\n      },\r\n      () => reject({ success: false })\r\n    );\r\n  });\r\n}\r\n\r\nexport function deTemplatize (\r\n  id: string | string[]\r\n): string | string[] {\r\n  if (Array.isArray(id)) {\r\n    return deTemplatizeList(id);\r\n  }\r\n\r\n  if (id && id.startsWith(\"{{\")) {\r\n    return id.substring(2, id.indexOf(\".\"));\r\n  } else {\r\n    return id;\r\n  }\r\n}\r\n\r\nfunction deTemplatizeList (\r\n  ids: string[]\r\n): string[] {\r\n  return ids.map(\r\n    (id:string) => {\r\n      return deTemplatize(id) as string;\r\n    }\r\n  );\r\n}\r\n\r\nexport function finalCallback (\r\n  key: string,\r\n  successful: boolean,\r\n  progressCallback?: (update:IProgressUpdate) => void\r\n): void {\r\n  progressCallback && progressCallback({\r\n    processId: key,\r\n    status: successful ? \"done\" : \"failed\"\r\n  });\r\n}\r\n\r\n/**\r\n * Creates a timestamp string using the current date and time.\r\n *\r\n * @return Timestamp\r\n * @protected\r\n */\r\nexport function getUTCTimestamp (\r\n): string {\r\n  const now = new Date();\r\n  return padPositiveNum(now.getUTCFullYear(), 4) + padPositiveNum(now.getUTCMonth() + 1, 2) +\r\n    padPositiveNum(now.getUTCDate(), 2) + \"_\" + padPositiveNum(now.getUTCHours(), 2) +\r\n    padPositiveNum(now.getUTCMinutes(), 2) + \"_\" + padPositiveNum(now.getUTCSeconds(), 2) +\r\n    padPositiveNum(now.getUTCMilliseconds(), 3);\r\n}\r\n\r\nfunction padPositiveNum (\r\n  n: number,\r\n  totalSize: number\r\n): string {\r\n  let numStr = n.toString();\r\n  const numPads = totalSize - numStr.length;\r\n  if (numPads > 0) {\r\n    numStr = \"0\".repeat(numPads) + numStr;  // TODO IE11 does not support repeat()\r\n  }\r\n  return numStr;\r\n}\r\n\r\nexport function templatize (\r\n  id: string | string[],\r\n  param = \"id\"\r\n): string | string[] {\r\n  if (Array.isArray(id)) {\r\n    return templatizeList(id, param);\r\n  }\r\n\r\n  if (id && id.startsWith(\"{{\")) {\r\n    return id;\r\n  } else {\r\n    return \"{{\" + id + \".\" + param + \"}}\";\r\n  }\r\n}\r\n\r\nexport function templatizeList (\r\n  ids: string[],\r\n  param = \"id\"\r\n): string[] {\r\n  return ids.map(\r\n    (id:string) => {\r\n      return templatize(id, param) as string;\r\n    }\r\n  );\r\n}\r\nexport function updateItemData (\r\n  id: string,\r\n  data: any,\r\n  requestOptions: IUserRequestOptions\r\n): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    // Update its URL\r\n    const options = {\r\n      item: {\r\n        id,\r\n        text: data\r\n      },\r\n      ...requestOptions\r\n    };\r\n\r\n    items.updateItem(options)\r\n    .then(\r\n      updateResp => {\r\n        resolve(id);\r\n      },\r\n      () => reject()\r\n    );\r\n  });\r\n}\r\n\r\n/**\r\n * Updates the URL of an item.\r\n *\r\n * @param id AGOL id of item to update\r\n * @param url URL to assign to item's base section\r\n * @param requestOptions Options for the request\r\n * @return A promise that will resolve when the item has been updated\r\n */\r\nexport function updateItemURL (\r\n  id: string,\r\n  url: string,\r\n  requestOptions: IUserRequestOptions\r\n): Promise<string> {\r\n  return new Promise((resolve, reject) => {\r\n    // Update its URL\r\n    const options = {\r\n      item: {\r\n        id,\r\n        url\r\n      },\r\n      ...requestOptions\r\n    };\r\n\r\n    items.updateItem(options)\r\n    .then(\r\n      updateResp => {\r\n        resolve(id);\r\n      },\r\n      () => reject()\r\n    );\r\n  });\r\n}\r\n\r\n","/*\r\n | Copyright 2018 Esri\r\n |\r\n | Licensed under the Apache License, Version 2.0 (the \"License\");\r\n | you may not use this file except in compliance with the License.\r\n | You may obtain a copy of the License at\r\n |\r\n |    http://www.apache.org/licenses/LICENSE-2.0\r\n |\r\n | Unless required by applicable law or agreed to in writing, software\r\n | distributed under the License is distributed on an \"AS IS\" BASIS,\r\n | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n | See the License for the specific language governing permissions and\r\n | limitations under the License.\r\n */\r\n/**\r\n * Get a property out of a deeply nested object\r\n * Does not handle anything but nested object graph\r\n *\r\n * @param obj Object to retrieve value from\r\n * @param path Path into an object, e.g., \"data.values.webmap\", where \"data\" is a top-level property\r\n *             in obj\r\n * @return Value at end of path\r\n */\r\nexport function getProp (\r\n  obj: { [index: string]: any },\r\n  path: string\r\n): any {\r\n  return path.split(\".\").reduce(function(prev, curr) {\r\n    /* istanbul ignore next no need to test undefined scenario */\r\n    return prev ? prev[curr] : undefined;\r\n  }, obj);\r\n}\r\n\r\n\r\n/**\r\n * Return an array of values from an object, based on an array of property paths\r\n * \r\n * @param obj object to retrive values from\r\n * @param props Array of paths into the object e.g., \"data.values.webmap\", where \"data\" is a top-level property\r\n * \r\n * @return Array of the values plucked from the object\r\n */\r\nexport function getProps (\r\n  obj: any,\r\n  props:string[]\r\n): any {\r\n  return props.reduce((a, p) => {\r\n    const v = getProp(obj, p);\r\n    if (v) {\r\n      a.push(v);\r\n    }\r\n    return a;\r\n  }, []);\r\n}\r\n\r\n/**\r\n * ```js\r\n * import { cloneObject } from \"utils/object-helpers\";\r\n * const original = { foo: \"bar\" }\r\n * const copy = cloneObject(original)\r\n * copy.foo // \"bar\"\r\n * copy === original // false\r\n * ```\r\n * Make a deep clone, including arrays. Does not handle functions!\r\n */\r\nexport function cloneObject(obj: { [index: string]: any }) {\r\n  let clone: { [index: string]: any } = {};\r\n  // first check array\r\n  if (Array.isArray(obj)) {\r\n    clone = obj.map(cloneObject);\r\n  } else if (typeof obj === \"object\") {\r\n    for (const i in obj) {\r\n      if (obj[i] != null && typeof obj[i] === \"object\") {\r\n        clone[i] = cloneObject(obj[i]);\r\n      } else {\r\n        clone[i] = obj[i];\r\n      }\r\n    }\r\n  } else {\r\n    clone = obj;\r\n  }\r\n  return clone;\r\n}\r\n\r\n/**\r\n * Look for a specific property name anywhere inside an object graph\r\n * and return the value\r\n */\r\nexport function getDeepValues (obj:any, prop:string): string[] {\r\n  let result = [] as string[];\r\n  if (!obj) return result;\r\n  let p;\r\n  for (p in obj) {\r\n    if (obj.hasOwnProperty(p)) {\r\n      if (p === prop) {\r\n        result.push(obj[p]);\r\n      } else {\r\n        if (Array.isArray(obj[p])) {\r\n          obj[p].forEach((e:any) => {\r\n            result = result.concat(getDeepValues(e, prop));\r\n          });\r\n        } else if (typeof obj[p] === 'object') {\r\n          result = result.concat(getDeepValues(obj[p], prop));\r\n        }\r\n      }\r\n    }\r\n  }\r\n  return result;\r\n}\r\n","/*\r\n | Copyright 2018 Esri\r\n |\r\n | Licensed under the Apache License, Version 2.0 (the \"License\");\r\n | you may not use this file except in compliance with the License.\r\n | You may obtain a copy of the License at\r\n |\r\n |    http://www.apache.org/licenses/LICENSE-2.0\r\n |\r\n | Unless required by applicable law or agreed to in writing, software\r\n | distributed under the License is distributed on an \"AS IS\" BASIS,\r\n | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n | See the License for the specific language governing permissions and\r\n | limitations under the License.\r\n */\r\n\r\n/**\r\n * Check if a given string is a GUID\r\n * @param stringToTest string that may be a guid\r\n * \r\n * @returns boolean indicating if the string is a guid\r\n */\r\nexport default function isGuid (stringToTest:any):boolean {\r\n  if (typeof stringToTest !== 'string') {\r\n    return false;\r\n  }\r\n  if (stringToTest[0] === '{') {\r\n    stringToTest = stringToTest.substring(1, stringToTest.length - 1);\r\n  }\r\n  const regexGuid = /^(\\{){0,1}[0-9a-fA-F]{8}[-]?[0-9a-fA-F]{4}[-]?[0-9a-fA-F]{4}[-]?[0-9a-fA-F]{4}[-]?[0-9a-fA-F]{12}(\\}){0,1}$/gi;\r\n  return regexGuid.test(stringToTest);\r\n}\r\n","/*\r\n | Copyright 2018 Esri\r\n |\r\n | Licensed under the Apache License, Version 2.0 (the \"License\");\r\n | you may not use this file except in compliance with the License.\r\n | You may obtain a copy of the License at\r\n |\r\n |    http://www.apache.org/licenses/LICENSE-2.0\r\n |\r\n | Unless required by applicable law or agreed to in writing, software\r\n | distributed under the License is distributed on an \"AS IS\" BASIS,\r\n | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n | See the License for the specific language governing permissions and\r\n | limitations under the License.\r\n */\r\n\r\n\r\nimport {getProp} from '../utils/object-helpers';\r\nimport isGuid from '../utils/is-guid';\r\n\r\n/**\r\n * Does the model have a specific typeKeyword?\r\n */\r\nexport function hasTypeKeyword (\r\n  model:any,\r\n  keyword:string\r\n  ):boolean {\r\n  const typeKeywords = getProp(model, 'item.typeKeywords') || model.typeKeywords || [];\r\n  return typeKeywords.includes(keyword);\r\n};\r\n\r\n/**\r\n * Does the model have any of a set of keywords\r\n */\r\nexport function hasAnyKeyword (\r\n  model:any,\r\n  keywords:string[]\r\n  ):boolean {\r\n  const typeKeywords = getProp(model, 'item.typeKeywords') || model.typeKeywords || [];\r\n  return keywords.reduce((a, kw) => {\r\n    if (!a) {\r\n      a = typeKeywords.includes(kw);\r\n    }\r\n    return a;\r\n  }, false);\r\n};\r\n\r\n/**\r\n * Given the url of a webapp, parse our the id from the url\r\n */\r\nexport function parseIdFromUrl (\r\n  url:string\r\n  ):string {\r\n  let id = null;\r\n  if (!url) {\r\n    return id;\r\n  }\r\n  const qs = url.split('?')[1];\r\n  if (qs) {\r\n    id = qs.split('&').reduce((a, p) => {\r\n      const part = p.split('=')[1];\r\n      if (part && isGuid(part)) {\r\n        a = part;\r\n      }\r\n      return a;\r\n    }, null);\r\n  }\r\n  return id;\r\n};\r\n\r\n/**\r\n * Return a random number, prefixed with a string. Used for unique identifiers that do not require\r\n * the rigor of a full UUID - i.e. node id's, process ids etc.\r\n * @param prefix String to prefix the random number with so the result is a valid javascript property\r\n */\r\nexport function createId (\r\n  prefix: string = \"i\"\r\n  ): string {\r\n  // prepend some char so it's always a valid dotable property name\r\n  // get a random number, convert to base 36 representation, then grab chars 2-8\r\n  return `${prefix}${Math.random()\r\n    .toString(36)\r\n    .substr(2, 8)}`;\r\n}\r\n","/*\r\n | Copyright 2018 Esri\r\n |\r\n | Licensed under the Apache License, Version 2.0 (the \"License\");\r\n | you may not use this file except in compliance with the License.\r\n | You may obtain a copy of the License at\r\n |\r\n |    http://www.apache.org/licenses/LICENSE-2.0\r\n |\r\n | Unless required by applicable law or agreed to in writing, software\r\n | distributed under the License is distributed on an \"AS IS\" BASIS,\r\n | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n | See the License for the specific language governing permissions and\r\n | limitations under the License.\r\n */\r\n\r\nimport * as adlib from \"adlib\";\r\nimport * as items from \"@esri/arcgis-rest-items\";\r\nimport { IUserRequestOptions } from \"@esri/arcgis-rest-auth\";\r\n\r\nimport * as mCommon from \"./common\";\r\nimport {getProp} from '../utils/object-helpers';\r\nimport { ITemplate, IProgressUpdate } from \"../interfaces\";\r\n\r\n/**\r\n * The portion of a Dashboard app URL between the server and the app id.\r\n * @protected\r\n */\r\nexport const OPS_DASHBOARD_APP_URL_PART:string = \"/apps/opsdashboard/index.html#/\";\r\n\r\n/**\r\n * The relevant elements of a Dashboard widget.\r\n * @protected\r\n */\r\ninterface IDashboardWidget {\r\n  /**\r\n   * AGOL item id for some widget types\r\n   */\r\n  itemId: string;\r\n  /**\r\n   * Dashboard widget type\r\n   */\r\n  type: string;\r\n}\r\n\r\n// -- Externals ------------------------------------------------------------------------------------------------------//\r\n\r\n// -- Create Bundle Process ------------------------------------------------------------------------------------------//\r\n\r\nexport function convertItemToTemplate (\r\n  itemTemplate: ITemplate,\r\n  requestOptions?: IUserRequestOptions\r\n): Promise<ITemplate> {\r\n  return new Promise(resolve => {\r\n    // Update the estimated cost factor to deploy this item\r\n    itemTemplate.estimatedDeploymentCostFactor = 4;\r\n\r\n    // Common templatizations: extent, item id, item dependency ids\r\n    mCommon.doCommonTemplatizations(itemTemplate);\r\n\r\n    // Templatize the app URL\r\n    itemTemplate.item.url = mCommon.PLACEHOLDER_SERVER_NAME + OPS_DASHBOARD_APP_URL_PART;\r\n\r\n    // Extract dependencies\r\n    itemTemplate.dependencies = extractDependencies(itemTemplate);\r\n\r\n    resolve(itemTemplate);\r\n  });\r\n}\r\n\r\n// -- Deploy Bundle Process ------------------------------------------------------------------------------------------//\r\n\r\nexport function createItemFromTemplate (\r\n  itemTemplate: ITemplate,\r\n  settings: any,\r\n  requestOptions: IUserRequestOptions,\r\n  progressCallback?: (update:IProgressUpdate) => void\r\n): Promise<ITemplate> {\r\n  progressCallback && progressCallback({\r\n    processId: itemTemplate.key,\r\n    type: itemTemplate.type,\r\n    status: \"starting\"\r\n  });\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const options:items.IItemAddRequestOptions = {\r\n      item: itemTemplate.item,\r\n      folder: settings.folderId,\r\n      ...requestOptions\r\n    };\r\n    if (itemTemplate.data) {\r\n      options.item.text = itemTemplate.data;\r\n    }\r\n\r\n    // Create the item\r\n    progressCallback && progressCallback({\r\n      processId: itemTemplate.key,\r\n      status: \"creating\",\r\n    });\r\n    items.createItemInFolder(options)\r\n    .then(\r\n      createResponse => {\r\n        if (createResponse.success) {\r\n          // Add the new item to the settings\r\n          settings[mCommon.deTemplatize(itemTemplate.itemId) as string] = {\r\n            id: createResponse.id\r\n          };\r\n          itemTemplate.itemId = itemTemplate.item.id = createResponse.id;\r\n          itemTemplate = adlib.adlib(itemTemplate, settings);\r\n\r\n          // Update the app URL\r\n          progressCallback && progressCallback({\r\n            processId: itemTemplate.key,\r\n            status: \"updating URL\"\r\n          });\r\n          mCommon.updateItemURL(itemTemplate.itemId, itemTemplate.item.url, requestOptions)\r\n          .then(\r\n            () => {\r\n              mCommon.finalCallback(itemTemplate.key, true, progressCallback);\r\n              resolve(itemTemplate);\r\n            },\r\n            () => {\r\n              mCommon.finalCallback(itemTemplate.key, false, progressCallback);\r\n              reject({ success: false });\r\n            }\r\n                );\r\n        } else {\r\n          mCommon.finalCallback(itemTemplate.key, false, progressCallback);\r\n          reject({ success: false });\r\n        }\r\n      },\r\n      () => {\r\n        mCommon.finalCallback(itemTemplate.key, false, progressCallback);\r\n        reject({ success: false });\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\n// -- Internals ------------------------------------------------------------------------------------------------------//\r\n// (export decoration is for unit testing)\r\n\r\n/**\r\n * Gets the ids of the dependencies of an AGOL dashboard item.\r\n *\r\n * @param fullItem A dashboard item whose dependencies are sought\r\n * @return List of dependencies\r\n * @protected\r\n */\r\nexport function extractDependencies (\r\n  itemTemplate: ITemplate\r\n): string[] {\r\n  const dependencies:string[] = [];\r\n\r\n  const widgets:IDashboardWidget[] = getProp(itemTemplate, \"data.widgets\");\r\n  if (widgets) {\r\n    widgets.forEach((widget:any) => {\r\n      if (widget.type === \"mapWidget\") {\r\n        dependencies.push(widget.itemId);\r\n      }\r\n    })\r\n  }\r\n\r\n  return dependencies;\r\n}\r\n","/*\r\n | Copyright 2018 Esri\r\n |\r\n | Licensed under the Apache License, Version 2.0 (the \"License\");\r\n | you may not use this file except in compliance with the License.\r\n | You may obtain a copy of the License at\r\n |\r\n |    http://www.apache.org/licenses/LICENSE-2.0\r\n |\r\n | Unless required by applicable law or agreed to in writing, software\r\n | distributed under the License is distributed on an \"AS IS\" BASIS,\r\n | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n | See the License for the specific language governing permissions and\r\n | limitations under the License.\r\n */\r\n\r\nimport * as adlib from \"adlib\";\r\nimport * as groups from \"@esri/arcgis-rest-groups\";\r\nimport * as sharing from \"@esri/arcgis-rest-sharing\";\r\nimport { IPagingParamsRequestOptions } from \"@esri/arcgis-rest-groups\";\r\nimport { IUserRequestOptions } from \"@esri/arcgis-rest-auth\";\r\n\r\nimport * as mCommon from \"./common\";\r\nimport { ITemplate, IProgressUpdate } from \"../interfaces\";\r\n\r\n// -- Externals ------------------------------------------------------------------------------------------------------//\r\n//\r\n// -- Create Bundle Process ------------------------------------------------------------------------------------------//\r\n\r\nexport function convertItemToTemplate (\r\n  itemTemplate: ITemplate,\r\n  requestOptions?: IUserRequestOptions\r\n): Promise<ITemplate> {\r\n  return new Promise((resolve, reject) => {\r\n    // Update the estimated cost factor to deploy this item\r\n    itemTemplate.estimatedDeploymentCostFactor = 3;\r\n\r\n    // Common templatizations: item id, item dependency ids\r\n    mCommon.doCommonTemplatizations(itemTemplate);\r\n\r\n    // Get dependencies (contents)\r\n    getGroupContents(itemTemplate, requestOptions)\r\n    .then(\r\n      dependencies => {\r\n        itemTemplate.dependencies = dependencies;\r\n        resolve(itemTemplate);\r\n      },\r\n      () => reject({ success: false })\r\n    )\r\n  });\r\n}\r\n\r\n// -- Deploy Bundle Process ------------------------------------------------------------------------------------------//\r\n\r\nexport function createItemFromTemplate (\r\n  itemTemplate: ITemplate,\r\n  settings: any,\r\n  requestOptions: IUserRequestOptions,\r\n  progressCallback?: (update:IProgressUpdate) => void\r\n): Promise<ITemplate> {\r\n  progressCallback && progressCallback({\r\n    processId: itemTemplate.key,\r\n    type: itemTemplate.type,\r\n    status: \"starting\"\r\n  });\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const options = {\r\n      group: itemTemplate.item,\r\n      ...requestOptions\r\n    };\r\n\r\n    // Make the item title unique\r\n    options.group.title += \"_\" + mCommon.getUTCTimestamp();\r\n\r\n    // Create the item\r\n    progressCallback && progressCallback({\r\n      processId: itemTemplate.key,\r\n      status: \"creating\",\r\n    });\r\n    groups.createGroup(options)\r\n    .then(\r\n      createResponse => {\r\n        if (createResponse.success) {\r\n          // Add the new item to the settings\r\n          settings[mCommon.deTemplatize(itemTemplate.itemId) as string] = {\r\n            id: createResponse.group.id\r\n          };\r\n          itemTemplate.itemId = createResponse.group.id;\r\n          itemTemplate = adlib.adlib(itemTemplate, settings);\r\n\r\n          // Add the group's items to it\r\n          addGroupMembers(itemTemplate, requestOptions, progressCallback)\r\n          .then(\r\n            () => {\r\n              mCommon.finalCallback(itemTemplate.key, true, progressCallback);\r\n              resolve(itemTemplate);\r\n            },\r\n            () => {\r\n              mCommon.finalCallback(itemTemplate.key, false, progressCallback);\r\n              reject({ success: false });\r\n            }\r\n                );\r\n        } else {\r\n          mCommon.finalCallback(itemTemplate.key, false, progressCallback);\r\n          reject({ success: false });\r\n        }\r\n      },\r\n      () => {\r\n        mCommon.finalCallback(itemTemplate.key, false, progressCallback);\r\n        reject({ success: false });\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\n// -- Internals ------------------------------------------------------------------------------------------------------//\r\n// (export decoration is for unit testing)\r\n\r\n/**\r\n * Adds the members of a group to it.\r\n *\r\n * @param itemTemplate Group\r\n * @param swizzles Hash mapping Solution source id to id of its clone\r\n * @param requestOptions Options for the request\r\n * @return A promise that will resolve when fullItem has been updated\r\n * @protected\r\n */\r\nexport function addGroupMembers (\r\n  itemTemplate: ITemplate,\r\n  requestOptions: IUserRequestOptions,\r\n  progressCallback?: (update:IProgressUpdate) => void\r\n):Promise<void> {\r\n  return new Promise<void>((resolve, reject) => {\r\n    // Add each of the group's items to it\r\n    if (itemTemplate.dependencies.length > 0) {\r\n      const awaitGroupAdds:Array<Promise<null>> = [];\r\n      itemTemplate.dependencies.forEach(depId => {\r\n        awaitGroupAdds.push(new Promise((resolve2, reject2) => {\r\n          sharing.shareItemWithGroup({\r\n            id: depId,\r\n            groupId: itemTemplate.itemId,\r\n            ...requestOptions\r\n          })\r\n          .then(\r\n            () => {\r\n              progressCallback && progressCallback({\r\n                processId: itemTemplate.key,\r\n                status: \"added group member\"\r\n              });\r\n              resolve2();\r\n            },\r\n            () => {\r\n              mCommon.finalCallback(itemTemplate.key, false, progressCallback);\r\n              reject2({ success: false });\r\n            }\r\n          );\r\n        }));\r\n      });\r\n      // After all items have been added to the group\r\n      Promise.all(awaitGroupAdds)\r\n      .then(\r\n        () => resolve(),\r\n        () => reject({ success: false })\r\n      );\r\n    } else {\r\n      // No items in this group\r\n      resolve();\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Gets the ids of the dependencies (contents) of an AGOL group.\r\n *\r\n * @param fullItem A group whose contents are sought\r\n * @param requestOptions Options for requesting information from AGOL\r\n * @return A promise that will resolve with list of dependent ids\r\n * @protected\r\n */\r\nexport function getGroupContents (\r\n  itemTemplate: ITemplate,\r\n  requestOptions: IUserRequestOptions\r\n): Promise<string[]> {\r\n  return new Promise((resolve, reject) => {\r\n    const pagingRequest:IPagingParamsRequestOptions = {\r\n      paging: {\r\n        start: 1,\r\n        num: 100\r\n      },\r\n      ...requestOptions\r\n    };\r\n\r\n    // Fetch group items\r\n    getGroupContentsTranche(itemTemplate.itemId, pagingRequest)\r\n    .then(\r\n      contents => {\r\n        // Update the estimated cost factor to deploy this item\r\n        itemTemplate.estimatedDeploymentCostFactor = 3 + contents.length;\r\n\r\n        resolve(contents);\r\n      },\r\n      () => reject({ success: false })\r\n    );\r\n  });\r\n}\r\n\r\n/**\r\n * Gets the ids of a group's contents.\r\n *\r\n * @param id Group id\r\n * @param pagingRequest Options for requesting group contents; note: its paging.start parameter may\r\n *                      be modified by this routine\r\n * @return A promise that will resolve with a list of the ids of the group's contents\r\n * @protected\r\n */\r\nexport function getGroupContentsTranche (\r\n  id: string,\r\n  pagingRequest: IPagingParamsRequestOptions\r\n): Promise<string[]> {\r\n  return new Promise((resolve, reject) => {\r\n    // Fetch group items\r\n    groups.getGroupContent(id, pagingRequest)\r\n    .then(\r\n      contents => {\r\n        if (contents.num > 0) {\r\n          // Extract the list of content ids from the JSON returned\r\n          const trancheIds:string[] = contents.items.map((item:any) => item.id);\r\n\r\n          // Are there more contents to fetch?\r\n          if (contents.nextStart > 0) {\r\n            pagingRequest.paging.start = contents.nextStart;\r\n            getGroupContentsTranche(id, pagingRequest)\r\n            .then(\r\n              (allSubsequentTrancheIds:string[]) => {\r\n                // Append all of the following tranches to this tranche and return it\r\n                resolve(trancheIds.concat(allSubsequentTrancheIds));\r\n              },\r\n              () => reject({ success: false })\r\n            );\r\n          } else {\r\n            resolve(trancheIds);\r\n          }\r\n        } else {\r\n          resolve([]);\r\n        }\r\n      },\r\n      () => reject({ success: false })\r\n    );\r\n  });\r\n}\r\n","/* Copyright (c) 2018-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport * as tslib_1 from \"tslib\";\nimport { request, getPortalUrl } from \"@esri/arcgis-rest-request\";\nimport { moveItem, determineOwner } from \"@esri/arcgis-rest-items\";\n/**\n * ```js\n * import {\n *   createFeatureService,\n *   addToServiceDefinition\n * } from '@esri/arcgis-rest-feature-service-admin';\n * //\n * createFeatureService({\n *   authentication: userSession,\n *   item: {\n *     \"name\": \"NewEmptyService\",\n *     \"capabilities\": \"Create,Delete,Query,Update,Editing\"\n *   }\n * });\n * ```\n * Create a new [hosted feature service](https://developers.arcgis.com/rest/users-groups-and-items/create-service.htm). After the service has been created, call [`addToServiceDefinition()`](../addToServiceDefinition/) if you'd like to update it's schema.\n * @param requestOptions - Options for the request\n * @returns A Promise that resolves with service details once the service has been created\n */\nexport function createFeatureService(requestOptions) {\n    var owner = determineOwner(requestOptions);\n    var baseUrl = getPortalUrl(requestOptions) + \"/content/users/\" + owner;\n    var url = baseUrl + \"/createService\";\n    // Create the service\n    requestOptions.params = tslib_1.__assign({ createParameters: requestOptions.item, outputType: \"featureService\" }, requestOptions.params);\n    if (!requestOptions.folderId || requestOptions.folderId === \"/\") {\n        // If the service is destined for the root folder, just send the request\n        return request(url, requestOptions);\n    }\n    else {\n        // If the service is destined for a subfolder, move it (via another call)\n        return request(url, requestOptions).then(function (createResponse) {\n            if (createResponse.success) {\n                return moveItem({\n                    itemId: createResponse.itemId,\n                    folderId: requestOptions.folderId,\n                    authentication: requestOptions.authentication\n                }).then(function (moveResponse) {\n                    if (moveResponse.success) {\n                        return createResponse;\n                    }\n                    else {\n                        throw Error(\"A problem was encountered when trying to move the service to a different folder.\");\n                    }\n                });\n            }\n            else {\n                throw Error(\"A problem was encountered when trying to create the service.\");\n            }\n        });\n    }\n}\n//# sourceMappingURL=create.js.map","/* Copyright (c) 2018-2019 Environmental Systems Research Institute, Inc.\n * Apache-2.0 */\nimport * as tslib_1 from \"tslib\";\nimport { request, cleanUrl } from \"@esri/arcgis-rest-request\";\n/**\n * ```js\n * import { addToServiceDefinition } from '@esri/arcgis-rest-feature-service-admin';\n * //\n * addToServiceDefinition(serviceurl, {\n *   authentication: userSession,\n *   layers: [],\n *   tables: []\n * });\n * ```\n * Add layer(s) and/or table(s) to a hosted feature service. See the [REST Documentation](https://developers.arcgis.com/rest/services-reference/add-to-definition-feature-service-.htm) for more information.\n *\n * @param url - URL of feature service\n * @param requestOptions - Options for the request\n * @returns A Promise that resolves with service layer and/or table details once the definition\n * has been updated\n */\nexport function addToServiceDefinition(url, requestOptions) {\n    var adminUrl = cleanUrl(url).replace(\"/rest/services\", \"/rest/admin/services\") + \"/addToDefinition\";\n    requestOptions.params = tslib_1.__assign({ addToDefinition: {} }, requestOptions.params);\n    if (requestOptions.layers && requestOptions.layers.length > 0) {\n        requestOptions.params.addToDefinition.layers = requestOptions.layers;\n    }\n    if (requestOptions.tables && requestOptions.tables.length > 0) {\n        requestOptions.params.addToDefinition.tables = requestOptions.tables;\n    }\n    return request(adminUrl, requestOptions);\n}\n//# sourceMappingURL=addTo.js.map","/*\r\n | Copyright 2018 Esri\r\n |\r\n | Licensed under the Apache License, Version 2.0 (the \"License\");\r\n | you may not use this file except in compliance with the License.\r\n | You may obtain a copy of the License at\r\n |\r\n |    http://www.apache.org/licenses/LICENSE-2.0\r\n |\r\n | Unless required by applicable law or agreed to in writing, software\r\n | distributed under the License is distributed on an \"AS IS\" BASIS,\r\n | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n | See the License for the specific language governing permissions and\r\n | limitations under the License.\r\n */\r\n\r\nimport * as adlib from \"adlib\";\r\nimport * as featureServiceAdmin from \"@esri/arcgis-rest-feature-service-admin\";\r\nimport * as items from \"@esri/arcgis-rest-items\";\r\nimport { request } from \"@esri/arcgis-rest-request\";\r\nimport { IUserRequestOptions } from \"@esri/arcgis-rest-auth\";\r\n\r\nimport * as mCommon from \"./common\";\r\nimport { ITemplate, IProgressUpdate } from \"../interfaces\";\r\n\r\n// -- Externals ------------------------------------------------------------------------------------------------------//\r\n\r\n// -- Create Bundle Process ------------------------------------------------------------------------------------------//\r\n\r\nexport function convertItemToTemplate (\r\n  itemTemplate: ITemplate,\r\n  requestOptions?: IUserRequestOptions\r\n): Promise<ITemplate> {\r\n  return new Promise((resolve, reject) => {\r\n    // Update the estimated cost factor to deploy this item\r\n    itemTemplate.estimatedDeploymentCostFactor = 3;\r\n\r\n    // Common templatizations: extent, item id, item dependency ids\r\n    mCommon.doCommonTemplatizations(itemTemplate);\r\n\r\n    fleshOutFeatureService(itemTemplate, requestOptions)\r\n    .then(\r\n      () => resolve(itemTemplate),\r\n      () => reject({ success: false })\r\n    );\r\n  });\r\n}\r\n\r\n// -- Deploy Bundle Process ------------------------------------------------------------------------------------------//\r\n\r\n/**\r\n * Creates an item in a specified folder (except for Group item type).\r\n *\r\n * @param itemTemplate Item to be created; n.b.: this item is modified\r\n * @param folderId Id of folder to receive item; null indicates that the item goes into the root\r\n *                 folder; ignored for Group item type\r\n * @param settings Hash mapping property names to replacement values\r\n * @param requestOptions Options for the request\r\n * @return A promise that will resolve with the id of the created item\r\n * @protected\r\n */\r\nexport function createItemFromTemplate (\r\n  itemTemplate: ITemplate,\r\n  settings: any,\r\n  requestOptions: IUserRequestOptions,\r\n  progressCallback?: (update:IProgressUpdate) => void\r\n): Promise<ITemplate> {\r\n  progressCallback && progressCallback({\r\n    processId: itemTemplate.key,\r\n    type: itemTemplate.type,\r\n    status: \"starting\"\r\n  });\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const createOptions = {\r\n      item: itemTemplate.item,\r\n      folderId: settings.folderId,\r\n      ...requestOptions\r\n    }\r\n    if (itemTemplate.data) {\r\n      createOptions.item.text = itemTemplate.data;\r\n    }\r\n\r\n    // Make the item name unique\r\n    createOptions.item.name = itemTemplate.item.name + \"_\" + mCommon.getUTCTimestamp();\r\n\r\n    // Create the item\r\n    progressCallback && progressCallback({\r\n      processId: itemTemplate.key,\r\n      status: \"creating\",\r\n    });\r\n    featureServiceAdmin.createFeatureService(createOptions)\r\n    .then(\r\n      createResponse => {\r\n        // Add the new item to the settings list\r\n        settings[mCommon.deTemplatize(itemTemplate.itemId) as string] = {\r\n          id: createResponse.serviceItemId,\r\n          url: createResponse.serviceurl\r\n        };\r\n        itemTemplate.itemId = itemTemplate.item.id = createResponse.serviceItemId;\r\n        itemTemplate = adlib.adlib(itemTemplate, settings);\r\n        itemTemplate.item.url = createResponse.serviceurl;\r\n\r\n        // Update item using a unique name because createFeatureService doesn't provide a way to specify\r\n        // snippet, description, etc.\r\n        const updateOptions:items.IItemUpdateRequestOptions = {\r\n          item: {\r\n            id: itemTemplate.itemId,\r\n            title: itemTemplate.item.title,\r\n            snippet: itemTemplate.item.snippet,\r\n            description: itemTemplate.item.description,\r\n            accessInfo: itemTemplate.item.accessInfo,\r\n            licenseInfo: itemTemplate.item.licenseInfo,\r\n            text: itemTemplate.data\r\n          },\r\n          ...requestOptions\r\n        };\r\n\r\n        items.updateItem(updateOptions)\r\n        .then(\r\n          () => {\r\n            // Add the feature service's layers and tables to it\r\n            addFeatureServiceLayersAndTables(itemTemplate, settings, requestOptions, progressCallback)\r\n            .then(\r\n              () => {\r\n                mCommon.finalCallback(itemTemplate.key, true, progressCallback);\r\n                resolve(itemTemplate);\r\n              },\r\n              () => {\r\n                mCommon.finalCallback(itemTemplate.key, false, progressCallback);\r\n                reject({ success: false });\r\n              }\r\n            );\r\n          },\r\n          () => {\r\n            mCommon.finalCallback(itemTemplate.key, false, progressCallback);\r\n            reject({ success: false });\r\n          }\r\n        );\r\n      },\r\n      () => {\r\n        mCommon.finalCallback(itemTemplate.key, false, progressCallback);\r\n        reject({ success: false });\r\n      }\r\n    )\r\n  });\r\n}\r\n\r\n// -- Internals ------------------------------------------------------------------------------------------------------//\r\n// (export decoration is for unit testing)\r\n\r\n/**\r\n * Holds the extra information needed by feature services.\r\n */\r\nexport interface IFeatureServiceProperties {\r\n  /**\r\n   * Service description\r\n   */\r\n  service: any;\r\n  /**\r\n   * Description for each layer\r\n   */\r\n  layers: any[];\r\n  /**\r\n   * Description for each table\r\n   */\r\n  tables: any[];\r\n}\r\n\r\n/**\r\n * Storage of a one-way relationship.\r\n * @protected\r\n */\r\ninterface IRelationship {\r\n  /**\r\n   * Relationship id and the ids of the items that it is related to.\r\n   */\r\n  [id:string]: string[];\r\n}\r\n\r\n/**\r\n * Adds the layers and tables of a feature service to it and restores their relationships.\r\n *\r\n * @param itemTemplate Feature service\r\n * @param settings Hash mapping Solution source id to id of its clone (and name & URL for feature\r\n *            service)\r\n * @param requestOptions Options for the request\r\n * @return A promise that will resolve when fullItem has been updated\r\n * @protected\r\n */\r\nexport function addFeatureServiceLayersAndTables (\r\n  itemTemplate: ITemplate,\r\n  settings: any,\r\n  requestOptions: IUserRequestOptions,\r\n  progressCallback?: (update:IProgressUpdate) => void\r\n): Promise<void> {\r\n  return new Promise((resolve, reject) => {\r\n\r\n    // Sort layers and tables by id so that they're added with the same ids\r\n    const properties:any = itemTemplate.properties as IFeatureServiceProperties;\r\n    const layersAndTables:any[] = [];\r\n\r\n    (properties.layers || []).forEach(function (layer:any) {\r\n      layersAndTables[layer.id] = {\r\n        item: layer,\r\n        type: \"layer\"\r\n      };\r\n    });\r\n\r\n    (properties.tables || []).forEach(function (table:any) {\r\n      layersAndTables[table.id] = {\r\n        item: table,\r\n        type: \"table\"\r\n      };\r\n    });\r\n\r\n    // Hold a hash of relationships\r\n    const relationships:IRelationship = {};\r\n\r\n    // Add the service's layers and tables to it\r\n    if (layersAndTables.length > 0) {\r\n      updateFeatureServiceDefinition(itemTemplate.itemId, itemTemplate.item.url, layersAndTables,\r\n        settings, relationships, requestOptions, itemTemplate.key, progressCallback)\r\n      .then(\r\n        () => {\r\n          // Restore relationships for all layers and tables in the service\r\n          const awaitRelationshipUpdates:Array<Promise<void>> = [];\r\n          Object.keys(relationships).forEach(\r\n            id => {\r\n              awaitRelationshipUpdates.push(new Promise((resolveFn, rejectFn) => {\r\n                const options = {\r\n                  params: {\r\n                    updateFeatureServiceDefinition: {\r\n                      relationships: relationships[id]\r\n                    }\r\n                  },\r\n                  ...requestOptions\r\n                };\r\n                featureServiceAdmin.addToServiceDefinition(itemTemplate.item.url + \"/\" + id, options)\r\n                .then(\r\n                  () => {\r\n                    progressCallback && progressCallback({\r\n                      processId: itemTemplate.key,\r\n                      status: \"updated relationship\"\r\n                    });\r\n                    resolveFn();\r\n                  },\r\n                  () => rejectFn()\r\n                );\r\n              }));\r\n            }\r\n          );\r\n          Promise.all(awaitRelationshipUpdates)\r\n          .then(\r\n            () => resolve(),\r\n            () => reject({ success: false })\r\n          );\r\n        },\r\n        () => reject({ success: false })\r\n      );\r\n    } else {\r\n      resolve();\r\n    }\r\n  });\r\n}\r\n\r\nexport function countRelationships (\r\n  layers: any[]\r\n): number {\r\n  const reducer = (accumulator:number, currentLayer:any) =>\r\n    accumulator + (currentLayer.relationships ? currentLayer.relationships.length : 0);\r\n\r\n  return layers.reduce(reducer, 0);\r\n}\r\n\r\n/**\r\n * Fills in missing data, including full layer and table definitions, in a feature services' definition.\r\n *\r\n * @param itemTemplate Feature service item, data, dependencies definition to be modified\r\n * @param requestOptions Options for requesting information from AGOL\r\n * @return A promise that will resolve when fullItem has been updated\r\n * @protected\r\n */\r\nexport function fleshOutFeatureService (\r\n  itemTemplate: ITemplate,\r\n  requestOptions: IUserRequestOptions\r\n): Promise<void> {\r\n  return new Promise<void>((resolve, reject) => {\r\n    const properties:IFeatureServiceProperties = {\r\n      service: {},\r\n      layers: [],\r\n      tables: []\r\n    };\r\n\r\n    // To have enough information for reconstructing the service, we'll supplement\r\n    // the item and data sections with sections for the service, full layers, and\r\n    // full tables\r\n\r\n    // Get the service description\r\n    const serviceUrl = itemTemplate.item.url;\r\n    itemTemplate.item.url = mCommon.templatize(itemTemplate.itemId, \"url\");\r\n    request(serviceUrl + \"?f=json\", requestOptions)\r\n    .then(\r\n      serviceData => {\r\n        serviceData.serviceItemId = mCommon.templatize(serviceData.serviceItemId);\r\n        properties.service = serviceData;\r\n\r\n        // Get the affiliated layer and table items\r\n        Promise.all([\r\n          getLayers(serviceUrl, serviceData[\"layers\"], requestOptions),\r\n          getLayers(serviceUrl, serviceData[\"tables\"], requestOptions)\r\n        ])\r\n        .then(\r\n          results => {\r\n            properties.layers = results[0];\r\n            properties.tables = results[1];\r\n            itemTemplate.properties = properties;\r\n\r\n            itemTemplate.estimatedDeploymentCostFactor +=\r\n              properties.layers.length +               // layers\r\n              countRelationships(properties.layers) +  // layer relationships\r\n              properties.tables.length +               // tables & estimated single relationship for each\r\n              countRelationships(properties.tables);   // table relationships\r\n\r\n            resolve();\r\n          },\r\n          () => reject({ success: false })\r\n        );\r\n      },\r\n      () => reject({ success: false })\r\n    );\r\n  });\r\n}\r\n\r\n/**\r\n * Gets the name of the first layer in list of layers that has a name\r\n * @param layerList List of layers to use as a name source\r\n * @return The name of the found layer or an empty string if no layers have a name\r\n * @protected\r\n */\r\nfunction getFirstUsableName (\r\n  layerList: any[]\r\n): string {\r\n  let name = \"\";\r\n  // Return the first layer name found\r\n  if (Array.isArray(layerList) && layerList.length > 0) {\r\n    layerList.some(layer => {\r\n      if (layer[\"name\"] !== \"\") {\r\n        name = layer[\"name\"];\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n  }\r\n  return name;\r\n}\r\n\r\n/**\r\n * Gets the full definitions of the layers affiliated with a hosted service.\r\n *\r\n * @param serviceUrl URL to hosted service\r\n * @param layerList List of layers at that service\r\n * @param requestOptions Options for the request\r\n * @return A promise that will resolve with a list of the enhanced layers\r\n * @protected\r\n */\r\nfunction getLayers (\r\n  serviceUrl: string,\r\n  layerList: any[],\r\n  requestOptions: IUserRequestOptions\r\n): Promise<any[]> {\r\n  return new Promise<any[]>((resolve, reject) => {\r\n    if (!Array.isArray(layerList) || layerList.length === 0) {\r\n      resolve([]);\r\n    }\r\n\r\n    const requestsDfd:Array<Promise<any>> = [];\r\n    layerList.forEach(layer => {\r\n      requestsDfd.push(request(serviceUrl + \"/\" + layer[\"id\"] + \"?f=json\", requestOptions));\r\n    });\r\n\r\n    // Wait until all layers are heard from\r\n    Promise.all(requestsDfd)\r\n    .then(\r\n      layers => {\r\n        // Remove the editFieldsInfo because it references fields that may not be in the layer/table;\r\n        // templatize the layer's serviceItemId\r\n        layers.forEach(layer => {\r\n          layer[\"editFieldsInfo\"] = null;\r\n          layer[\"serviceItemId\"] = mCommon.templatize(layer[\"serviceItemId\"]);\r\n        });\r\n        resolve(layers);\r\n      },\r\n      () => reject({ success: false })\r\n    );\r\n  });\r\n}\r\n\r\n/**\r\n * Updates a feature service with a list of layers and/or tables.\r\n *\r\n * @param serviceItemId AGOL id of feature service\r\n * @param serviceUrl URL of feature service\r\n * @param listToAdd List of layers and/or tables to add\r\n * @param settings Hash mapping Solution source id to id of its clone (and name & URL for feature\r\n *            service)\r\n * @param relationships Hash mapping a layer's relationship id to the ids of its relationships\r\n * @param requestOptions Options for requesting information from AGOL\r\n * @return A promise that will resolve when the feature service has been updated\r\n * @protected\r\n */\r\nfunction updateFeatureServiceDefinition(\r\n  serviceItemId: string,\r\n  serviceUrl: string,\r\n  listToAdd: any[],\r\n  settings: any,\r\n  relationships: IRelationship,\r\n  requestOptions: IUserRequestOptions,\r\n  key: string,\r\n  progressCallback?: (update:IProgressUpdate) => void\r\n): Promise<void> {\r\n  // Launch the adds serially because server doesn't support parallel adds\r\n  return new Promise((resolve, reject) => {\r\n    if (listToAdd.length > 0) {\r\n      const toAdd = listToAdd.shift();\r\n\r\n      const item = toAdd.item;\r\n      const originalId = item.id;\r\n      delete item.serviceItemId;  // Updated by updateFeatureServiceDefinition\r\n\r\n      // Need to remove relationships and add them back individually after all layers and tables\r\n      // have been added to the definition\r\n      if (Array.isArray(item.relationships) && item.relationships.length > 0) {\r\n        relationships[originalId] = item.relationships;\r\n        item.relationships = [];\r\n      }\r\n\r\n      const options:featureServiceAdmin.IAddToServiceDefinitionRequestOptions = {\r\n        ...requestOptions\r\n      };\r\n\r\n      // Need to add layers and tables one at a time, waiting until one is complete before moving on to the next one\r\n      if (toAdd.type === \"layer\") {\r\n        item.adminLayerInfo = {  // ???\r\n          \"geometryField\": {\r\n            \"name\": \"Shape\",\r\n            \"srid\": 102100\r\n          }\r\n        };\r\n        options.layers = [item];\r\n      } else {\r\n        options.tables = [item];\r\n      }\r\n\r\n      featureServiceAdmin.addToServiceDefinition(serviceUrl, options)\r\n      .then(\r\n        () => {\r\n          progressCallback && progressCallback({\r\n            processId: key,\r\n            status: \"added layer\"\r\n          });\r\n\r\n          updateFeatureServiceDefinition(serviceItemId, serviceUrl, listToAdd, settings, relationships,\r\n            requestOptions, key, progressCallback)\r\n          .then(\r\n            () => resolve(),\r\n            () => reject({ success: false })\r\n          );\r\n        },\r\n        error => {console.warn(\"addToServiceDefinition reject\", JSON.stringify(error,null,2)); reject({ success: false });} // //???\r\n        // //???() => reject({ success: false })\r\n      );\r\n    } else {\r\n      resolve();\r\n    }\r\n  });\r\n}\r\n\r\n","/*\r\n | Copyright 2018 Esri\r\n |\r\n | Licensed under the Apache License, Version 2.0 (the \"License\");\r\n | you may not use this file except in compliance with the License.\r\n | You may obtain a copy of the License at\r\n |\r\n |    http://www.apache.org/licenses/LICENSE-2.0\r\n |\r\n | Unless required by applicable law or agreed to in writing, software\r\n | distributed under the License is distributed on an \"AS IS\" BASIS,\r\n | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n | See the License for the specific language governing permissions and\r\n | limitations under the License.\r\n */\r\n\r\nimport * as adlib from \"adlib\";\r\nimport * as items from \"@esri/arcgis-rest-items\";\r\nimport { IUserRequestOptions } from \"@esri/arcgis-rest-auth\";\r\n\r\nimport * as mCommon from \"./common\";\r\nimport { ITemplate, IProgressUpdate } from \"../interfaces\";\r\n\r\n// -------------------------------------------------------------------------------------------------------------------//\r\n\r\n/**\r\n * The portion of a Webmap URL between the server and the map id.\r\n * @protected\r\n */\r\nconst WEBMAP_APP_URL_PART:string = \"/home/webmap/viewer.html?webmap=\";\r\n\r\n// -- Externals ------------------------------------------------------------------------------------------------------//\r\n\r\n// -- Create Bundle Process ------------------------------------------------------------------------------------------//\r\n\r\nexport function convertItemToTemplate (\r\n  itemTemplate: ITemplate,\r\n  requestOptions?: IUserRequestOptions\r\n): Promise<ITemplate> {\r\n  return new Promise(resolve => {\r\n    // Update the estimated cost factor to deploy this item\r\n    itemTemplate.estimatedDeploymentCostFactor = 4;\r\n\r\n    // Common templatizations: extent, item id, item dependency ids\r\n    mCommon.doCommonTemplatizations(itemTemplate);\r\n\r\n    // Templatize the app URL\r\n    itemTemplate.item.url =\r\n      mCommon.PLACEHOLDER_SERVER_NAME + WEBMAP_APP_URL_PART + mCommon.templatize(itemTemplate.itemId);\r\n\r\n    // Extract dependencies\r\n    itemTemplate.dependencies = extractDependencies(itemTemplate);\r\n\r\n    // Templatize the map layer ids now that we've extracted them as dependencies\r\n    if (itemTemplate.data) {\r\n      templatizeWebmapLayerIdsAndUrls(itemTemplate.data.operationalLayers);\r\n      templatizeWebmapLayerIdsAndUrls(itemTemplate.data.tables);\r\n    }\r\n\r\n    resolve(itemTemplate);\r\n  });\r\n}\r\n\r\n// -- Deploy Bundle Process ------------------------------------------------------------------------------------------//\r\n\r\nexport function createItemFromTemplate (\r\n  itemTemplate: ITemplate,\r\n  settings: any,\r\n  requestOptions: IUserRequestOptions,\r\n  progressCallback?: (update:IProgressUpdate) => void\r\n): Promise<ITemplate> {\r\n  progressCallback && progressCallback({\r\n    processId: itemTemplate.key,\r\n    type: itemTemplate.type,\r\n    status: \"starting\"\r\n  });\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const options:items.IItemAddRequestOptions = {\r\n      item: itemTemplate.item,\r\n      folder: settings.folderId,\r\n      ...requestOptions\r\n    };\r\n    if (itemTemplate.data) {\r\n      options.item.text = itemTemplate.data;\r\n    }\r\n\r\n    // Create the item\r\n    progressCallback && progressCallback({\r\n      processId: itemTemplate.key,\r\n      status: \"creating\",\r\n    });\r\n    items.createItemInFolder(options)\r\n    .then(\r\n      createResponse => {\r\n        if (createResponse.success) {\r\n          // Add the new item to the settings\r\n          settings[mCommon.deTemplatize(itemTemplate.itemId) as string] = {\r\n            id: createResponse.id\r\n          };\r\n          itemTemplate.itemId = itemTemplate.item.id = createResponse.id;\r\n          itemTemplate = adlib.adlib(itemTemplate, settings);\r\n\r\n          // Update the app URL\r\n          progressCallback && progressCallback({\r\n            processId: itemTemplate.key,\r\n            status: \"updating URL\"\r\n          });\r\n          mCommon.updateItemURL(itemTemplate.itemId, itemTemplate.item.url, requestOptions)\r\n          .then(\r\n            () => {\r\n              mCommon.finalCallback(itemTemplate.key, true, progressCallback);\r\n              resolve(itemTemplate);\r\n            },\r\n            () => {\r\n              mCommon.finalCallback(itemTemplate.key, false, progressCallback);\r\n              reject({ success: false });\r\n            }\r\n          );\r\n        } else {\r\n          mCommon.finalCallback(itemTemplate.key, false, progressCallback);\r\n          reject({ success: false });\r\n        }\r\n      },\r\n      () => {\r\n        mCommon.finalCallback(itemTemplate.key, false, progressCallback);\r\n        reject({ success: false });\r\n      }\r\n    )\r\n  });\r\n}\r\n\r\n// -- Internals ------------------------------------------------------------------------------------------------------//\r\n// (export decoration is for unit testing)\r\n\r\n/**\r\n * Gets the ids of the dependencies of an AGOL webmap item.\r\n *\r\n * @param fullItem A webmap item whose dependencies are sought\r\n * @return List of dependencies\r\n * @protected\r\n */\r\nexport function extractDependencies (\r\n  itemTemplate: ITemplate\r\n): string[] {\r\n  let dependencies:string[] = [];\r\n\r\n  if (itemTemplate.data) {\r\n    dependencies = [\r\n      ...getWebmapLayerIds(itemTemplate.data.operationalLayers),\r\n      ...getWebmapLayerIds(itemTemplate.data.tables)\r\n    ];\r\n  }\r\n\r\n  return dependencies;\r\n}\r\n\r\n/**\r\n * Extracts the AGOL id or URL for each layer or table object in a list.\r\n *\r\n * @param layerList List of map layers or tables\r\n * @return List containing id of each layer or table that has an itemId\r\n * @protected\r\n */\r\nexport function getWebmapLayerIds (\r\n  layerList = [] as any[]\r\n): string[] {\r\n  return layerList.reduce(\r\n    (ids:string[], layer:any) => {\r\n      const itemId = layer.itemId as string;\r\n      if (itemId) {\r\n        ids.push(itemId);\r\n      }\r\n      return ids;\r\n    },\r\n    [] as string[]\r\n  );\r\n}\r\n\r\nexport function templatizeWebmapLayerIdsAndUrls (\r\n  layerList = [] as any[]\r\n): void {\r\n  layerList\r\n  .filter(\r\n    (layer:any) => !!layer.itemId\r\n  )\r\n  .forEach(\r\n    (layer:any) => {\r\n      const layerId = layer.url.substr((layer.url as string).lastIndexOf(\"/\"));\r\n      layer.itemId = mCommon.templatize(layer.itemId);\r\n      layer.url = mCommon.templatize(mCommon.deTemplatize(layer.itemId), \"url\") + layerId;\r\n    }\r\n  );\r\n}\r\n","/*\r\n | Copyright 2018 Esri\r\n |\r\n | Licensed under the Apache License, Version 2.0 (the \"License\");\r\n | you may not use this file except in compliance with the License.\r\n | You may obtain a copy of the License at\r\n |\r\n |    http://www.apache.org/licenses/LICENSE-2.0\r\n |\r\n | Unless required by applicable law or agreed to in writing, software\r\n | distributed under the License is distributed on an \"AS IS\" BASIS,\r\n | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n | See the License for the specific language governing permissions and\r\n | limitations under the License.\r\n */\r\n\r\nimport {getProp, getProps, getDeepValues} from '../utils/object-helpers';\r\nimport { hasTypeKeyword, parseIdFromUrl } from '../utils/item-helpers';\r\n\r\n/**\r\n * Return a list of items this depends on\r\n */\r\nexport function extractDependencies (\r\n  model:any)\r\n  : string[] {\r\n  // unknown types have no deps...\r\n  let processor = (m:any) => [] as any;\r\n  // find known types by typeKeyword\r\n  if (hasTypeKeyword(model, 'Cascade')) {\r\n    processor = getCascadeDependencies;\r\n  }\r\n  if (hasTypeKeyword(model, 'MapJournal')) {\r\n    processor = getMapJournalDependencies;\r\n  }\r\n\r\n  if (hasTypeKeyword(model, 'mapseries')) {\r\n    processor = getMapSeriesDependencies;\r\n  }\r\n  // execute\r\n  return processor(model);\r\n};\r\n\r\n/**\r\n * Cascade specific logic\r\n */\r\nexport function getCascadeDependencies (\r\n  model:any\r\n  ):string[] {\r\n  // Cascade Example QA b908258efbba4f019450db46382a0c13\r\n  const sections = getProp(model, 'data.values.sections') || [];\r\n  return sections.reduce((a:any, s:any) => {\r\n    return a.concat(getDeepValues(s, 'webmap').map((e:any) => {\r\n      return e.id;\r\n    }));\r\n  }, []);\r\n};\r\n\r\n/**\r\n * Map Series specific logic\r\n */\r\nexport function getMapSeriesDependencies (\r\n  model:any\r\n  ):string[] {\r\n  const deps = getProps(model, ['data.values.webmap']);\r\n  const entries = getProp(model, 'data.values.story.entries') || [];\r\n  entries.forEach((e:any) => {\r\n    const entryWebmaps = getDeepValues(e, 'webmap').map((obj:any) => {\r\n      return obj.id;\r\n    });\r\n    // may be dupes...\r\n    entryWebmaps.forEach((id) => {\r\n      if (deps.indexOf(id) === -1) {\r\n        deps.push(id);\r\n      }\r\n    });\r\n  });\r\n  return deps;\r\n};\r\n\r\nexport function getMapJournalDependencies (\r\n  model:any\r\n  ):string[] {\r\n  // MapJournal example QA 4c4d084c22d249fdbb032e4143c62546\r\n  const sections = getProp(model, 'data.values.story.sections') || [];\r\n\r\n  const deps = sections.reduce((a:any, s:any) => {\r\n    if (s.media) {\r\n      if (s.media.type === 'webmap') {\r\n        const v = getProp(s, 'media.webmap.id');\r\n        if (v) {\r\n          a.push(v);\r\n        }\r\n      }\r\n      if (s.media.type === 'webpage') {\r\n        const url = getProp(s, 'media.webpage.url');\r\n        const id = parseIdFromUrl(url);\r\n        if (id) {\r\n          a.push(id);\r\n        }\r\n      }\r\n    }\r\n    return a;\r\n  }, []);\r\n  return deps;\r\n};\r\n","/*\r\n | Copyright 2018 Esri\r\n |\r\n | Licensed under the Apache License, Version 2.0 (the \"License\");\r\n | you may not use this file except in compliance with the License.\r\n | You may obtain a copy of the License at\r\n |\r\n |    http://www.apache.org/licenses/LICENSE-2.0\r\n |\r\n | Unless required by applicable law or agreed to in writing, software\r\n | distributed under the License is distributed on an \"AS IS\" BASIS,\r\n | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n | See the License for the specific language governing permissions and\r\n | limitations under the License.\r\n */\r\n\r\nimport { getProp } from '../utils/object-helpers';\r\n\r\n/**\r\n * Return a list of items this site depends on\r\n */\r\nexport function extractDependencies (\r\n  model: any\r\n  ): string[]  {\r\n    const deps = [];\r\n    const v = getProp(model, 'data.map.itemId');\r\n    if (v) {\r\n      deps.push(v);\r\n    }\r\n    return deps;\r\n};","/*\r\n | Copyright 2018 Esri\r\n |\r\n | Licensed under the Apache License, Version 2.0 (the \"License\");\r\n | you may not use this file except in compliance with the License.\r\n | You may obtain a copy of the License at\r\n |\r\n |    http://www.apache.org/licenses/LICENSE-2.0\r\n |\r\n | Unless required by applicable law or agreed to in writing, software\r\n | distributed under the License is distributed on an \"AS IS\" BASIS,\r\n | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n | See the License for the specific language governing permissions and\r\n | limitations under the License.\r\n */\r\n\r\nimport * as adlib from \"adlib\";\r\nimport {getProp, getProps} from '../utils/object-helpers';\r\nimport {hasTypeKeyword, hasAnyKeyword} from '../utils/item-helpers';\r\nimport * as items from \"@esri/arcgis-rest-items\";\r\nimport { IUserRequestOptions } from \"@esri/arcgis-rest-auth\";\r\n\r\nimport * as mCommon from \"./common\";\r\nimport { ITemplate, IProgressUpdate } from \"../interfaces\";\r\nimport {extractDependencies as getStoryMapDependencies} from './storymap';\r\nimport {extractDependencies as getWABDependencies} from './webappbuilder';\r\n\r\n// -- Externals ------------------------------------------------------------------------------------------------------//\r\n\r\n// -- Create Bundle Process ------------------------------------------------------------------------------------------//\r\n\r\nexport function convertItemToTemplate (\r\n  itemTemplate: ITemplate,\r\n  requestOptions?: IUserRequestOptions\r\n): Promise<ITemplate> {\r\n  return new Promise(resolve => {\r\n    // Update the estimated cost factor to deploy this item\r\n    itemTemplate.estimatedDeploymentCostFactor = 4;\r\n\r\n    // Common templatizations: extent, item id, item dependency ids\r\n    mCommon.doCommonTemplatizations(itemTemplate);\r\n\r\n    // Remove org base URL and app id, e.g.,\r\n    //   http://statelocaltryit.maps.arcgis.com/apps/CrowdsourcePolling/index.html?appid=6fc5992522d34f26b2210d17835eea21\r\n    // to\r\n    //   <PLACEHOLDER_SERVER_NAME>/apps/CrowdsourcePolling/index.html?appid={{<itemId>.id}}\r\n    // Need to add placeholder server name because otherwise AGOL makes URL null\r\n    const templatizedUrl = itemTemplate.item.url;\r\n    const iSep = templatizedUrl.indexOf(\"//\");\r\n    itemTemplate.item.url = mCommon.PLACEHOLDER_SERVER_NAME +  // add placeholder server name\r\n      templatizedUrl.substring(templatizedUrl.indexOf(\"/\", iSep + 2), templatizedUrl.lastIndexOf(\"=\") + 1) +\r\n      mCommon.templatize(itemTemplate.itemId);\r\n\r\n    // Set the folder\r\n    if (getProp(itemTemplate, \"data.folderId\")) {\r\n      itemTemplate.data.folderId = \"{{folderId}}\";\r\n    }\r\n\r\n    // Set the map or group\r\n    if (getProp(itemTemplate, \"data.values.webmap\")) {\r\n      itemTemplate.data.values.webmap = mCommon.templatize(itemTemplate.data.values.webmap);\r\n    } else if (getProp(itemTemplate, \"data.values.group\")) {\r\n      itemTemplate.data.values.group = mCommon.templatize(itemTemplate.data.values.group);\r\n    }\r\n\r\n    // Extract dependencies\r\n    itemTemplate.dependencies = extractDependencies(itemTemplate);\r\n\r\n    resolve(itemTemplate);\r\n  });\r\n}\r\n\r\n// -- Deploy Bundle Process ------------------------------------------------------------------------------------------//\r\n\r\nexport function createItemFromTemplate (\r\n  itemTemplate: ITemplate,\r\n  settings: any,\r\n  requestOptions: IUserRequestOptions,\r\n  progressCallback?: (update:IProgressUpdate) => void\r\n): Promise<ITemplate> {\r\n  progressCallback && progressCallback({\r\n    processId: itemTemplate.key,\r\n    type: itemTemplate.type,\r\n    status: \"starting\"\r\n  });\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const options:items.IItemAddRequestOptions = {\r\n      item: itemTemplate.item,\r\n      folder: settings.folderId,\r\n      ...requestOptions\r\n    };\r\n    if (itemTemplate.data) {\r\n      options.item.text = itemTemplate.data;\r\n    }\r\n\r\n    // Create the item\r\n    progressCallback && progressCallback({\r\n      processId: itemTemplate.key,\r\n      status: \"creating\",\r\n    });\r\n    items.createItemInFolder(options)\r\n    .then(\r\n      createResponse => {\r\n        if (createResponse.success) {\r\n          // Add the new item to the settings\r\n          settings[mCommon.deTemplatize(itemTemplate.itemId) as string] = {\r\n            id: createResponse.id\r\n          };\r\n          itemTemplate.itemId = itemTemplate.item.id = createResponse.id;\r\n          itemTemplate = adlib.adlib(itemTemplate, settings);\r\n\r\n          // Update the app URL\r\n          progressCallback && progressCallback({\r\n            processId: itemTemplate.key,\r\n            status: \"updating URL\"\r\n          });\r\n          mCommon.updateItemURL(itemTemplate.itemId, itemTemplate.item.url, requestOptions)\r\n          .then(\r\n            () => {\r\n              mCommon.finalCallback(itemTemplate.key, true, progressCallback);\r\n              resolve(itemTemplate);\r\n            },\r\n            () => {\r\n              mCommon.finalCallback(itemTemplate.key, false, progressCallback);\r\n              reject({ success: false });\r\n            }\r\n                );\r\n        } else {\r\n          mCommon.finalCallback(itemTemplate.key, false, progressCallback);\r\n          reject({ success: false });\r\n        }\r\n      },\r\n      () => {\r\n        mCommon.finalCallback(itemTemplate.key, false, progressCallback);\r\n        reject({ success: false });\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\n// -- Internals ------------------------------------------------------------------------------------------------------//\r\n// (export decoration is for unit testing)\r\n\r\n/**\r\n * Gets the ids of the dependencies of an AGOL webapp item.\r\n *\r\n * @param fullItem A webapp item whose dependencies are sought\r\n * @return A promise that will resolve with list of dependent ids\r\n * @protected\r\n */\r\nexport function extractDependencies (\r\n  model: any\r\n): string[] {\r\n  let processor = getGenericWebAppDependencies;\r\n\r\n  if (hasTypeKeyword(model, 'Story Map')) {\r\n    processor = getStoryMapDependencies;\r\n  }\r\n\r\n  if (hasAnyKeyword(model, ['WAB2D', 'WAB3D', 'Web AppBuilder'])) {\r\n    processor = getWABDependencies;\r\n  }\r\n\r\n  return processor(model);\r\n\r\n};\r\n\r\n/**\r\n * Generic Web App Dependencies\r\n */\r\nexport function getGenericWebAppDependencies (\r\n  model:any\r\n  ): string[] {\r\n  const props = ['data.webmap', 'data.itemId', 'data.values.webmap', 'data.values.group'];\r\n  return getProps(model, props);\r\n};\r\n","/*\r\n | Copyright 2018 Esri\r\n |\r\n | Licensed under the Apache License, Version 2.0 (the \"License\");\r\n | you may not use this file except in compliance with the License.\r\n | You may obtain a copy of the License at\r\n |\r\n |    http://www.apache.org/licenses/LICENSE-2.0\r\n |\r\n | Unless required by applicable law or agreed to in writing, software\r\n | distributed under the License is distributed on an \"AS IS\" BASIS,\r\n | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n | See the License for the specific language governing permissions and\r\n | limitations under the License.\r\n */\r\n\r\nimport * as adlib from \"adlib\";\r\nimport * as items from \"@esri/arcgis-rest-items\";\r\nimport { IUserRequestOptions } from \"@esri/arcgis-rest-auth\";\r\n\r\nimport * as mCommon from \"./common\";\r\nimport { ITemplate, IProgressUpdate } from \"../interfaces\";\r\n\r\n// -- Externals ------------------------------------------------------------------------------------------------------//\r\n\r\n// -- Create Bundle Process ------------------------------------------------------------------------------------------//\r\n\r\nexport function convertItemToTemplate (\r\n  itemTemplate: ITemplate,\r\n  requestOptions?: IUserRequestOptions\r\n): Promise<ITemplate> {\r\n  return new Promise(resolve => {\r\n    // Common templatizations: extent, item id, item dependency ids\r\n    mCommon.doCommonTemplatizations(itemTemplate);\r\n\r\n    resolve(itemTemplate);\r\n  });\r\n}\r\n\r\n// -- Deploy Bundle Process ------------------------------------------------------------------------------------------//\r\n\r\nexport function createItemFromTemplate (\r\n  itemTemplate: ITemplate,\r\n  settings: any,\r\n  requestOptions: IUserRequestOptions,\r\n  progressCallback?: (update:IProgressUpdate) => void\r\n): Promise<ITemplate> {\r\n  progressCallback && progressCallback({\r\n    processId: itemTemplate.key,\r\n    type: itemTemplate.type,\r\n    status: \"starting\"\r\n  });\r\n\r\n  return new Promise((resolve, reject) => {\r\n    const options:items.IItemAddRequestOptions = {\r\n      item: itemTemplate.item,\r\n      folder: settings.folderId,\r\n      ...requestOptions\r\n    };\r\n    if (itemTemplate.data) {\r\n      options.item.text = itemTemplate.data;\r\n    }\r\n\r\n    // Create the item\r\n    progressCallback && progressCallback({\r\n      processId: itemTemplate.key,\r\n      status: \"creating\",\r\n    });\r\n    items.createItemInFolder(options)\r\n    .then(\r\n      createResponse => {\r\n        if (createResponse.success) {\r\n          // Add the new item to the settings\r\n          settings[mCommon.deTemplatize(itemTemplate.itemId) as string] = {\r\n            id: createResponse.id\r\n          };\r\n          itemTemplate.itemId = itemTemplate.item.id = createResponse.id;\r\n          itemTemplate = adlib.adlib(itemTemplate, settings);\r\n\r\n          mCommon.finalCallback(itemTemplate.key, true, progressCallback);\r\n          resolve(itemTemplate);\r\n        } else {\r\n          mCommon.finalCallback(itemTemplate.key, false, progressCallback);\r\n          reject({ success: false });\r\n        }\r\n      },\r\n      () => {\r\n        mCommon.finalCallback(itemTemplate.key, false, progressCallback);\r\n        reject({ success: false });\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\n","/*\r\n | Copyright 2018 Esri\r\n |\r\n | Licensed under the Apache License, Version 2.0 (the \"License\");\r\n | you may not use this file except in compliance with the License.\r\n | You may obtain a copy of the License at\r\n |\r\n |    http://www.apache.org/licenses/LICENSE-2.0\r\n |\r\n | Unless required by applicable law or agreed to in writing, software\r\n | distributed under the License is distributed on an \"AS IS\" BASIS,\r\n | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n | See the License for the specific language governing permissions and\r\n | limitations under the License.\r\n */\r\n\r\nimport * as groups from \"@esri/arcgis-rest-groups\";\r\nimport * as items from \"@esri/arcgis-rest-items\";\r\nimport { IUserRequestOptions } from \"@esri/arcgis-rest-auth\";\r\n\r\nimport { createId } from '../utils/item-helpers';\r\nimport * as mCommon from \"./common\";\r\nimport { ITemplate, IItemTypeModule, IProgressUpdate } from \"../interfaces\";\r\nimport * as DashboardModule from \"./dashboard\";\r\nimport * as GroupModule from \"./group\";\r\nimport * as FeatureServiceModule from \"./featureservice\";\r\nimport * as WebMapModule from \"./webmap\";\r\nimport * as WebMappingApplicationModule from \"./webmappingapplication\";\r\nimport * as GenericModule from \"./generic\";\r\n\r\n// -------------------------------------------------------------------------------------------------------------------//\r\n\r\n/**\r\n * Structure for mapping from item type to module with type-specific template-handling code\r\n */\r\ninterface IItemTypeModuleMap {\r\n  [itemType: string]: IItemTypeModule;\r\n}\r\n\r\n/**\r\n * Mapping from item type to module with type-specific template-handling code\r\n */\r\nconst moduleMap:IItemTypeModuleMap = {\r\n  \"dashboard\": DashboardModule,\r\n  \"feature service\": FeatureServiceModule,\r\n  \"group\": GroupModule,\r\n  \"web map\": WebMapModule,\r\n  \"web mapping application\": WebMappingApplicationModule\r\n};\r\n\r\n// -- Externals ------------------------------------------------------------------------------------------------------//\r\n\r\n/**\r\n * Returns a list of the currently-supported AGO item types.\r\n *\r\n * @return List of item type names; names are all-lowercase forms of standard names\r\n */\r\nexport function getSupportedItemTypes (\r\n): string[] {\r\n  return Object.keys(moduleMap);\r\n}\r\n\r\n/**\r\n * Fetches the item and data sections, the resource and dependencies lists, and the item-type-specific\r\n * functions for an item using its AGOL item id, and then calls a type-specific function to convert\r\n * the item into a template.\r\n *\r\n * @param itemId AGO id of solution template item to templatize\r\n * @param requestOptions Options for the request\r\n * @return A promise which will resolve with an item template\r\n */\r\nexport function convertItemToTemplate (\r\n  itemId: string,\r\n  requestOptions: IUserRequestOptions\r\n): Promise<ITemplate> {\r\n  return new Promise((resolve, reject) => {\r\n    let itemTemplate:ITemplate;\r\n\r\n    // Request item base section\r\n    items.getItem(itemId, requestOptions)\r\n    .then(\r\n      itemResponse => {\r\n        if (!moduleMap[itemResponse.type.toLowerCase()]) {\r\n          console.warn(\"Unimplemented item type \" + itemResponse.type + \" for \" + itemId);\r\n        }\r\n\r\n        itemTemplate = {\r\n          itemId: itemResponse.id,\r\n          type: itemResponse.type,\r\n          key: createId(),\r\n          item: removeUndesirableItemProperties(itemResponse),\r\n          dependencies: [],\r\n          fcns: moduleMap[itemResponse.type.toLowerCase()] || GenericModule,\r\n          estimatedDeploymentCostFactor: 3  // minimal set is starting, creating, done|failed\r\n        };\r\n        itemTemplate.item.id = mCommon.templatize(itemTemplate.item.id);\r\n        if (itemTemplate.item.item) {\r\n          itemTemplate.item.item = mCommon.templatize(itemTemplate.item.item);\r\n        }\r\n\r\n        // Convert relative thumbnail URL to an absolute one so that it can be preserved\r\n        // TODO disconnected deployment may not have access to the absolute URL\r\n        itemTemplate.item.thumbnail = \"https://www.arcgis.com/sharing/content/items/\" +\r\n          itemId + \"/info/\" + itemTemplate.item.thumbnail;\r\n\r\n        // Request item data section\r\n        const dataPromise = items.getItemData(itemId, requestOptions);\r\n\r\n        // Request item resources\r\n        const resourceRequestOptions = {\r\n          id: itemId,\r\n          ...requestOptions\r\n        };\r\n        const resourcePromise = items.getItemResources(resourceRequestOptions);\r\n\r\n        // Items without a data section return an error from the REST library, so we'll need to prevent it\r\n        // from killing off both promises. This means that there's no `reject` clause to handle, hence:\r\n        // tslint:disable-next-line:no-floating-promises\r\n        Promise.all([\r\n          dataPromise.catch(() => null),\r\n          resourcePromise.catch(() => null)\r\n        ])\r\n        .then(\r\n          responses => {\r\n            const [dataResponse, resourceResponse] = responses;\r\n            itemTemplate.data = dataResponse;\r\n            itemTemplate.resources = resourceResponse && resourceResponse.total > 0 ? resourceResponse.resources : null;\r\n\r\n            // Create the item's template\r\n            itemTemplate.fcns.convertItemToTemplate(itemTemplate, requestOptions)\r\n            .then(\r\n              template => {\r\n                itemTemplate.dependencies = removeDuplicates(\r\n                  (template.dependencies || [] as string[])\r\n                  .reduce((acc, val) => acc.concat(val), [])  // some dependencies come out as nested, so flatten\r\n                );\r\n\r\n                resolve(itemTemplate);\r\n              },\r\n              () => reject({ success: false })\r\n            );\r\n          }\r\n        );\r\n      },\r\n      () => {\r\n        // If item query fails, try URL for group base section\r\n        groups.getGroup(itemId, requestOptions)\r\n        .then(\r\n          itemResponse => {\r\n            itemTemplate = {\r\n              itemId: itemResponse.id,\r\n              type: \"Group\",\r\n              key: createId(),\r\n              item: removeUndesirableItemProperties(itemResponse),\r\n              dependencies: [],\r\n              fcns: moduleMap[\"group\"],\r\n              estimatedDeploymentCostFactor: 3  // minimal set is starting, creating, done|failed\r\n            };\r\n\r\n            // Convert relative thumbnail URL to an absolute one so that it can be preserved\r\n            // TODO disconnected deployment may not have access to the absolute URL\r\n            itemTemplate.item.thumbnail = \"https://www.arcgis.com/sharing/content/items/\" +\r\n              itemId + \"/info/\" + itemTemplate.item.thumbnail;\r\n\r\n            // Create the item's template\r\n            itemTemplate.fcns.convertItemToTemplate(itemTemplate, requestOptions)\r\n            .then(\r\n              template => {\r\n                itemTemplate.dependencies = removeDuplicates(\r\n                  (template.dependencies || [] as string[])\r\n                  .reduce((acc, val) => acc.concat(val), [])  // some dependencies come out as nested, so flatten\r\n                );\r\n\r\n                resolve(itemTemplate);\r\n              },\r\n              () => reject({ success: false })\r\n            );\r\n          },\r\n          () => reject({ success: false })\r\n        );\r\n      }\r\n    );\r\n  });\r\n}\r\n\r\n/**\r\n * Loads the item-type-specific functions for an item.\r\n *\r\n * @param itemTemplate Item template to update\r\n * @return Updated item template\r\n */\r\nexport function initItemTemplateFromJSON (\r\n  itemTemplate:ITemplate\r\n): ITemplate {\r\n  itemTemplate.fcns = moduleMap[itemTemplate.type.toLowerCase()] || GenericModule;\r\n  return itemTemplate;\r\n}\r\n\r\n// -- Internals ------------------------------------------------------------------------------------------------------//\r\n// (export decoration is for unit testing)\r\n\r\n/**\r\n * Removes duplicates from an array of strings.\r\n *\r\n * @param arrayWithDups An array to be copied\r\n * @return Copy of array with duplicates removed\r\n * @protected\r\n */\r\nexport function removeDuplicates (\r\n  arrayWithDups:string[]\r\n): string[] {\r\n  const uniqueStrings:{\r\n    [value:string]: boolean;\r\n  } = {};\r\n  arrayWithDups.forEach((arrayElem:string) => uniqueStrings[arrayElem] = true);\r\n  return Object.keys(uniqueStrings);\r\n}\r\n\r\n/**\r\n * Creates a copy of item base properties with properties irrelevant to cloning removed.\r\n *\r\n * @param item The base section of an item\r\n * @return Cloned copy of item without certain properties such as `created`, `modified`,\r\n *        `owner`,...; note that is is a shallow copy\r\n * @protected\r\n */\r\nexport function removeUndesirableItemProperties (\r\n  item: any\r\n): any {\r\n  if (item) {\r\n    const itemSectionClone = {...item};\r\n    delete itemSectionClone.avgRating;\r\n    delete itemSectionClone.created;\r\n    delete itemSectionClone.guid;\r\n    delete itemSectionClone.lastModified;\r\n    delete itemSectionClone.modified;\r\n    delete itemSectionClone.numComments;\r\n    delete itemSectionClone.numRatings;\r\n    delete itemSectionClone.numViews;\r\n    delete itemSectionClone.orgId;\r\n    delete itemSectionClone.owner;\r\n    delete itemSectionClone.scoreCompleteness;\r\n    delete itemSectionClone.size;\r\n    delete itemSectionClone.uploaded;\r\n    return itemSectionClone;\r\n  }\r\n  return null;\r\n}\r\n","/*\r\n | Copyright 2018 Esri\r\n |\r\n | Licensed under the Apache License, Version 2.0 (the \"License\");\r\n | you may not use this file except in compliance with the License.\r\n | You may obtain a copy of the License at\r\n |\r\n |    http://www.apache.org/licenses/LICENSE-2.0\r\n |\r\n | Unless required by applicable law or agreed to in writing, software\r\n | distributed under the License is distributed on an \"AS IS\" BASIS,\r\n | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n | See the License for the specific language governing permissions and\r\n | limitations under the License.\r\n */\r\n\r\nimport * as adlib from \"adlib\";\r\nimport * as items from \"@esri/arcgis-rest-items\";\r\nimport { ArcGISRequestError } from \"@esri/arcgis-rest-request\";\r\nimport { IUserRequestOptions } from \"@esri/arcgis-rest-auth\";\r\nimport { IItem } from '@esri/arcgis-rest-common-types';\r\n\r\nimport * as mCommon from \"./itemTypes/common\";\r\nimport * as mClassifier from \"./itemTypes/classifier\";\r\nimport * as mInterfaces from \"./interfaces\";\r\n\r\n// -- Externals ------------------------------------------------------------------------------------------------------//\r\n\r\n/**\r\n * Creates a solution template item.\r\n *\r\n * @param title The title to use for the item\r\n * @param version The version to include in the item's metadata\r\n * @param ids AGO id string or list of AGO id strings\r\n * @param sourceRequestOptions Options for requesting information from AGO about items to be\r\n *                             included in solution template\r\n * @param destinationRequestOptions Options for creating solution template item in AGO\r\n * @return A promise that will resolve with a solution template item\r\n */\r\nexport function createSolutionTemplate (\r\n  title: string,\r\n  version: string,\r\n  ids: string | string[],\r\n  sourceRequestOptions: IUserRequestOptions,\r\n  destinationRequestOptions: IUserRequestOptions\r\n): Promise<mInterfaces.ISolutionTemplateItem> {\r\n  return new Promise<mInterfaces.ISolutionTemplateItem>((resolve, reject) => {\r\n    // Create an empty solution template item\r\n    createSolutionTemplateItem(title, version, destinationRequestOptions, undefined, \"public\")\r\n    .then(\r\n      solutionTemplateItem => {\r\n        // Get the templates for the items in the solution\r\n        createSolutionItemTemplates(ids, solutionTemplateItem, sourceRequestOptions)\r\n        .then(\r\n          templates => {\r\n            solutionTemplateItem.data.templates = templates;\r\n\r\n            // Update the solution template item\r\n            updateSolutionTemplateItem(solutionTemplateItem, destinationRequestOptions)\r\n            .then(\r\n              updatedSolutionTemplateItem => {\r\n                resolve(updatedSolutionTemplateItem);\r\n              },\r\n              () => reject({ success: false })\r\n            )\r\n          },\r\n          () => reject({ success: false })\r\n        );\r\n      },\r\n      () => reject({ success: false })\r\n    );\r\n  });\r\n}\r\n\r\n/**\r\n * Converts a solution template into an AGO deployed solution and items.\r\n *\r\n * @param solutionTemplateItem Solution template to deploy\r\n * @param requestOptions Options for the request\r\n * @param settings Hash of facts: org URL, adlib replacements\r\n * @param progressCallback Function for reporting progress updates from type-specific template\r\n *                         handlers\r\n * @return A promise that will resolve with a list of the ids of items created in AGO\r\n */\r\nexport function createSolutionFromTemplate  (\r\n  solutionTemplateItem: mInterfaces.ISolutionTemplateItem,\r\n  requestOptions: IUserRequestOptions,\r\n  settings = {} as any,\r\n  progressCallback?: (update:mInterfaces.IProgressUpdate) => void\r\n): Promise<mInterfaces.ITemplate[]> {\r\n  return new Promise<mInterfaces.ITemplate[]>((resolve, reject) => {\r\n    const templates:mInterfaces.ITemplate[] = solutionTemplateItem.data.templates;\r\n    const clonedSolution:mInterfaces.ITemplate[] = [];\r\n    settings.solutionName = settings.solutionName || \"Solution\";\r\n\r\n    // Don't bother creating folder if there are no items in solution\r\n    if (!templates || Object.keys(templates).length === 0) {\r\n      resolve(clonedSolution);\r\n    }\r\n\r\n    // Run through the list of item ids in clone order\r\n    const cloneOrderChecklist:string[] = topologicallySortItems(templates);\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Common launch point whether using an existing folder or following the creation of one\r\n    // Creates deployed solution item, then launches deployment of its items\r\n    function launchDeployment () {\r\n      createDeployedSolutionItem(settings.solutionName, solutionTemplateItem, requestOptions, settings, 'public')\r\n      .then(\r\n        solutionItem => {\r\n          progressCallback({\r\n            processId: solutionItem.id,\r\n            type: \"Solution\",\r\n            status: \"done\"\r\n          });\r\n\r\n          runThroughChecklistInParallel();\r\n        },\r\n        () => reject({ success: false })\r\n      );\r\n    }\r\n\r\n    // Trigger creation of all items in list and wait for completion\r\n    function runThroughChecklistInParallel () {\r\n      const awaitAllItems = [] as Array<Promise<mInterfaces.ITemplate>>;\r\n      cloneOrderChecklist.forEach(\r\n        id => awaitAllItems.push(createItemFromTemplateWhenReady(id,\r\n          templates, requestOptions, settings, progressCallback))\r\n      );\r\n\r\n      // Wait until all items have been created\r\n      Promise.all(awaitAllItems)\r\n      .then(\r\n        clonedSolutionItems => resolve(clonedSolutionItems),\r\n        () => reject({ success: false })\r\n      );\r\n    }\r\n    // -------------------------------------------------------------------------\r\n\r\n    // Use specified folder to hold the hydrated items to avoid name clashes\r\n    if (settings.folderId) {\r\n      launchDeployment();\r\n    } else {\r\n      // Create a folder to hold the hydrated items to avoid name clashes\r\n      const folderName = settings.solutionName + \" (\" + mCommon.getUTCTimestamp() + \")\";\r\n      const options = {\r\n        title: folderName,\r\n        authentication: requestOptions.authentication\r\n      };\r\n      items.createFolder(options)\r\n      .then(\r\n        createdFolderResponse => {\r\n          settings.folderId = createdFolderResponse.folder.id;\r\n          launchDeployment();\r\n        },\r\n        () => reject({ success: false })\r\n      );\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Returns the sum of the estimated cost factors of a set of templates.\r\n *\r\n * @param templates A collection of AGO item templates\r\n * @return Sum of cost factors\r\n */\r\nexport function getEstimatedDeploymentCost (\r\n  templates: mInterfaces.ITemplate[]\r\n): number {\r\n  // Get the total estimated cost of creating this solution\r\n  const reducer = (accumulator:number, currentTemplate:mInterfaces.ITemplate) =>\r\n    accumulator + (currentTemplate.estimatedDeploymentCostFactor ?\r\n    currentTemplate.estimatedDeploymentCostFactor : 3);\r\n  return templates.reduce(reducer, 0);\r\n}\r\n\r\n/**\r\n * Returns a list of the currently-supported AGO item types.\r\n *\r\n * @return List of item type names; names are all-lowercase forms of standard names\r\n */\r\nexport function getSupportedItemTypes (\r\n): string[] {\r\n  return mClassifier.getSupportedItemTypes();\r\n}\r\n\r\n// -- Internals ------------------------------------------------------------------------------------------------------//\r\n// (export decoration is for unit testing)\r\n\r\n/**\r\n * A parameterized server name to replace the organization URL in a Web Mapping Application's URL to\r\n * itself; name has to be acceptable to AGO, otherwise it discards the URL, so substitution must be\r\n * made before attempting to create the item.\r\n * @protected\r\n */\r\nexport const PLACEHOLDER_SERVER_NAME:string = \"{{organization.portalBaseUrl}}\";\r\n\r\n/**\r\n * The portion of a Dashboard app URL between the server and the app id.\r\n * @protected\r\n */\r\nexport const OPS_DASHBOARD_APP_URL_PART:string = \"/apps/opsdashboard/index.html#/\";\r\n\r\n/**\r\n * The portion of a Webmap URL between the server and the map id.\r\n * @protected\r\n */\r\nexport const WEBMAP_APP_URL_PART:string = \"/home/webmap/viewer.html?webmap=\";\r\n\r\n/**\r\n * A vertex used in the topological sort algorithm.\r\n * @protected\r\n */\r\ninterface ISortVertex {\r\n  /**\r\n   * Vertex (AGO) id and its visited status, described by the SortVisitColor enum\r\n   */\r\n  [id:string]: number;\r\n}\r\n\r\n/**\r\n * A visit flag used in the topological sort algorithm.\r\n * @protected\r\n */\r\nenum SortVisitColor {\r\n  /** not yet visited */\r\n  White,\r\n  /** visited, in progress */\r\n  Gray,\r\n  /** finished */\r\n  Black\r\n}\r\n\r\n/**\r\n * Creates an empty template.\r\n *\r\n * @param id AGO id of item\r\n * @return Empty template containing supplied id\r\n * @protected\r\n */\r\nfunction createPlaceholderTemplate (\r\n  id: string\r\n): mInterfaces.ITemplate {\r\n  return {\r\n    itemId: id,\r\n    type: \"\",\r\n    key: \"\",\r\n    item: null\r\n  };\r\n}\r\n\r\n/**\r\n * Creates an empty deployed solution AGO item.\r\n *\r\n * @param title Title to use for item\r\n * @param solutionTemplateItem Solution template to deploy; serves as source of text info for new\r\n *                             item\r\n * @param requestOptions Options for the request\r\n * @param settings Hash of facts: org URL, adlib replacements\r\n * @param access Access to set for item: 'public', 'org', 'private'\r\n * @return Empty template item\r\n * @protected\r\n */\r\nexport function createDeployedSolutionItem (\r\n  title: string,\r\n  solutionTemplateItem: mInterfaces.ISolutionTemplateItem,\r\n  requestOptions: IUserRequestOptions,\r\n  settings = {} as any,\r\n  access = \"private\"\r\n): Promise<mInterfaces.IAGOItemAccess> {\r\n  return new Promise((resolve, reject) => {\r\n    const templateItem = solutionTemplateItem.item;\r\n    const thumbnailUrl:string = \"https://www.arcgis.com/sharing/content/items/\" +\r\n      templateItem.id + \"/info/\" + templateItem.thumbnail;\r\n    const item = {\r\n      itemType: \"text\",\r\n      name: null as string,\r\n      title,\r\n      description: templateItem.description,\r\n      tags: templateItem.tags,\r\n      snippet: templateItem.snippet,\r\n      thumbnailurl: thumbnailUrl,\r\n      accessInformation: templateItem.accessInformation,\r\n      type: \"Solution\",\r\n      typeKeywords: [\"Solution\", \"Deployed\"],\r\n      commentsEnabled: false\r\n    };\r\n\r\n    mCommon.createItemWithData(item, null, requestOptions, settings.folderId, access)\r\n    .then(\r\n      createResponse => {\r\n        const orgUrl = (settings.organization && settings.organization.orgUrl) || \"https://www.arcgis.com\";\r\n        const deployedSolutionItem:mInterfaces.IAGOItemAccess = {\r\n          id: createResponse.id,\r\n          url: orgUrl + \"/home/item.html?id=\" + createResponse.id\r\n        }\r\n        resolve(deployedSolutionItem);\r\n      },\r\n      () => reject({ success: false })\r\n    );\r\n  });\r\n}\r\n\r\n/**\r\n * Fetches an AGO item and converts it into a template after its dependencies have been fetched and\r\n * converted.\r\n *\r\n * @param itemId AGO id of solution template item to deploy\r\n * @param templates A collection of AGO item templates\r\n * @param requestOptions Options for the request\r\n * @param settings Hash of facts: org URL, adlib replacements\r\n * @param progressCallback Function for reporting progress updates from type-specific template\r\n *                         handlers\r\n * @return A promise that will resolve with the item's template (which is simply returned if it's\r\n *         already in the templates list\r\n * @protected\r\n */\r\nexport function createItemFromTemplateWhenReady (\r\n  itemId: string,\r\n  templates: mInterfaces.ITemplate[],\r\n  requestOptions: IUserRequestOptions,\r\n  settings: any,\r\n  progressCallback?: (update:mInterfaces.IProgressUpdate) => void\r\n): Promise<mInterfaces.ITemplate> {\r\n  settings[itemId] = {};\r\n  const itemDef = new Promise<mInterfaces.ITemplate>((resolve, reject) => {\r\n    const template = findTemplateInList(templates, itemId);\r\n    if (!template) {\r\n      reject({ success: false });\r\n    }\r\n\r\n    // Wait until all dependencies are deployed\r\n    const awaitDependencies = [] as Array<Promise<mInterfaces.ITemplate>>;\r\n    (template.dependencies || []).forEach(dependencyId => awaitDependencies.push(settings[dependencyId].def));\r\n    Promise.all(awaitDependencies)\r\n    .then(\r\n      () => {\r\n        // Prepare template\r\n        let itemTemplate = mClassifier.initItemTemplateFromJSON(findTemplateInList(templates, itemId));\r\n\r\n        // Interpolate it\r\n        itemTemplate.dependencies = itemTemplate.dependencies ?\r\n          mCommon.templatize(itemTemplate.dependencies) as string[] : [];\r\n        itemTemplate = adlib.adlib(itemTemplate, settings);\r\n\r\n        // Deploy it\r\n        itemTemplate.fcns.createItemFromTemplate(itemTemplate, settings, requestOptions, progressCallback)\r\n        .then(\r\n          itemClone => resolve(itemClone),\r\n          () => reject({ success: false })\r\n        )\r\n      },\r\n      () => reject({ success: false })\r\n    );\r\n  });\r\n\r\n  // Save the deferred for the use of items that depend on this item being created first\r\n  settings[itemId].def = itemDef;\r\n  return itemDef;\r\n}\r\n\r\n/**\r\n * Creates templates for a set of AGO items.\r\n *\r\n * @param ids AGO id string or list of AGO id strings\r\n * @param solutionTemplateItem Solution template serving as parent for templates\r\n * @param requestOptions Options for the request\r\n * @param templates A collection of AGO item templates that can be referenced by newly-created\r\n *                  templates\r\n * @return A promise that will resolve with the created template items\r\n * @protected\r\n */\r\nexport function createSolutionItemTemplates (\r\n  ids: string | string[],\r\n  solutionTemplateItem: mInterfaces.ISolutionTemplateItem,\r\n  requestOptions: IUserRequestOptions,\r\n  templates?: mInterfaces.ITemplate[]\r\n): Promise<mInterfaces.ITemplate[]> {\r\n  if (!templates) {\r\n    templates = [];\r\n  }\r\n\r\n  return new Promise((resolve, reject) => {\r\n    if (typeof ids === \"string\") {\r\n      // Handle a single AGO id\r\n      const rootId = ids;\r\n      if (findTemplateInList(templates, rootId)) {\r\n        resolve(templates);  // Item and its dependents are already in list or are queued\r\n\r\n      } else {\r\n        // Add the id as a placeholder to show that it will be fetched\r\n        const getItemPromise = mClassifier.convertItemToTemplate(rootId, requestOptions);\r\n        templates.push(createPlaceholderTemplate(rootId));\r\n\r\n        // Get the specified item\r\n        getItemPromise\r\n        .then(\r\n          itemTemplate => {\r\n            // Set the value keyed by the id, replacing the placeholder\r\n            replaceTemplate(templates, itemTemplate.itemId, itemTemplate);\r\n\r\n            // Trace item dependencies\r\n            if (itemTemplate.dependencies.length === 0) {\r\n              resolve(templates);\r\n\r\n            } else {\r\n              // Get its dependents, asking each to get its dependents via\r\n              // recursive calls to this function\r\n              const dependentDfds:Array<Promise<mInterfaces.ITemplate[]>> = [];\r\n\r\n              itemTemplate.dependencies.forEach(\r\n                dependentId => {\r\n                  if (!findTemplateInList(templates, dependentId)) {\r\n                    dependentDfds.push(createSolutionItemTemplates(dependentId,\r\n                      solutionTemplateItem, requestOptions, templates));\r\n                  }\r\n                }\r\n              );\r\n              Promise.all(dependentDfds)\r\n              .then(\r\n                () => {\r\n                  resolve(templates);\r\n                },\r\n                () => reject({ success: false })\r\n              );\r\n            }\r\n          },\r\n          () => reject({ success: false })\r\n        );\r\n      }\r\n\r\n    } else if (Array.isArray(ids) && ids.length > 0) {\r\n      // Handle a list of one or more AGO ids by stepping through the list\r\n      // and calling this function recursively\r\n      const getHierarchyPromise:Array<Promise<mInterfaces.ITemplate[]>> = [];\r\n\r\n      ids.forEach(id => {\r\n        getHierarchyPromise.push(createSolutionItemTemplates(id, solutionTemplateItem, requestOptions, templates));\r\n      });\r\n      Promise.all(getHierarchyPromise)\r\n      .then(\r\n        () => {\r\n          resolve(templates);\r\n        },\r\n        () => reject({ success: false })\r\n      );\r\n\r\n    } else {\r\n      reject({ success: false });\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Creates an empty solution template AGO item.\r\n *\r\n * @param title The title to use for the item\r\n * @param version The version to include in the item's metadata\r\n * @param requestOptions Options for the request\r\n * @param settings Hash of facts: org URL, adlib replacements\r\n * @param access Access to set for item: 'public', 'org', 'private'\r\n * @return Empty template item\r\n * @protected\r\n */\r\nexport function createSolutionTemplateItem (\r\n  title: string,\r\n  version: string,\r\n  requestOptions: IUserRequestOptions,\r\n  settings = {} as any,\r\n  access = \"private\"\r\n): Promise<mInterfaces.ISolutionTemplateItem> {\r\n  return new Promise((resolve, reject) => {\r\n    const solutionTemplateItem:mInterfaces.ISolutionTemplateItem = {\r\n      item: {\r\n        itemType: \"text\",\r\n        name: null as string,\r\n        title,\r\n        type: \"Solution\",\r\n        typeKeywords: [\"Solution\", \"Template\"],\r\n        commentsEnabled: false\r\n      },\r\n      data: {\r\n        metadata: {\r\n          version\r\n        },\r\n        templates: [] as mInterfaces.ITemplate[]\r\n      }\r\n    }\r\n\r\n    mCommon.createItemWithData(solutionTemplateItem.item, solutionTemplateItem.data,\r\n      requestOptions, settings.folderId, access)\r\n    .then(\r\n      createResponse => {\r\n        const orgUrl = (settings.organization && settings.organization.orgUrl) || \"https://www.arcgis.com\";\r\n        solutionTemplateItem.item.id = createResponse.id;\r\n        solutionTemplateItem.item.url = orgUrl + \"/home/item.html?id=\" + createResponse.id;\r\n        resolve(solutionTemplateItem);\r\n      },\r\n      () => reject({ success: false })\r\n    );\r\n  });\r\n}\r\n\r\n/**\r\n * Finds index of template by id in a list of templates.\r\n *\r\n * @param templates A collection of AGO item templates to search\r\n * @param id AGO id of template to find\r\n * @return Id of matching template or -1 if not found\r\n * @protected\r\n */\r\nfunction findTemplateIndexInSolution (\r\n  templates: mInterfaces.ITemplate[],\r\n  id: string\r\n): number {\r\n  const baseId = mCommon.deTemplatize(id);\r\n  return templates.findIndex(\r\n    template => {\r\n      return baseId === mCommon.deTemplatize(template.itemId);\r\n    }\r\n  );\r\n}\r\n\r\n/**\r\n * Finds template by id in a list of templates.\r\n *\r\n * @param templates A collection of AGO item templates to search\r\n * @param id AGO id of template to find\r\n * @return Matching template or null\r\n */\r\nexport function findTemplateInList (\r\n  templates: mInterfaces.ITemplate[],\r\n  id: string\r\n): mInterfaces.ITemplate {\r\n  const childId = findTemplateIndexInSolution(templates, id);\r\n  return childId >= 0 ? templates[childId] : null;\r\n}\r\n\r\n/**\r\n * Creates a Solution item containing JSON descriptions of items forming the solution.\r\n *\r\n * @param title Title for Solution item to create\r\n * @param templates Hash of JSON descriptions of items to publish into Solution\r\n * @param requestOptions Options for the request\r\n * @param folderId Id of folder to receive item; null/empty indicates that the item goes into the root\r\n *                 folder; ignored for Group item type\r\n * @param access Access to set for item: 'public', 'org', 'private'\r\n * @return A promise that will resolve with an object reporting success and the solution id\r\n * @protected\r\n */\r\nexport function publishSolutionTemplate (\r\n  title: string,\r\n  templates: mInterfaces.ITemplate[],\r\n  requestOptions: IUserRequestOptions,\r\n  folderId = null as string,\r\n  access = \"private\"\r\n): Promise<items.IItemUpdateResponse> {\r\n  // Define the solution item\r\n  const item = {\r\n    title,\r\n    type: \"Solution\",\r\n    itemType: \"text\",\r\n    typeKeywords: [\"Template\"],\r\n    access,\r\n    listed: false,\r\n    commentsEnabled: false\r\n  };\r\n  const data = {\r\n    templates\r\n  };\r\n\r\n  return mCommon.createItemWithData(item, data, requestOptions, folderId, access);\r\n}\r\n\r\n/**\r\n * Replaces a template entry in a list of templates\r\n *\r\n * @param templates A collection of AGO item templates\r\n * @param id Id of item in templates list to find; if not found, no replacement is () => done()\r\n * @param template Replacement template\r\n * @return True if replacement was made\r\n * @protected\r\n */\r\nexport function replaceTemplate (\r\n  templates: mInterfaces.ITemplate[],\r\n  id: string,\r\n  template: mInterfaces.ITemplate\r\n): boolean {\r\n  const i = findTemplateIndexInSolution(templates, id);\r\n  if (i >=  0) {\r\n    templates[i] = template;\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Topologically sort a Solution's items into a build list.\r\n *\r\n * @param templates A collection of AGO item templates\r\n * @return List of ids of items in the order in which they need to be built so that dependencies\r\n * are built before items that require those dependencies\r\n * @throws Error(\"Cyclical dependency graph detected\")\r\n * @protected\r\n */\r\nexport function topologicallySortItems (\r\n  templates: mInterfaces.ITemplate[]\r\n): string[] {\r\n  // Cormen, Thomas H.; Leiserson, Charles E.; Rivest, Ronald L.; Stein, Clifford (2009)\r\n  // Sections 22.3 (Depth-first search) & 22.4 (Topological sort), pp. 603-615\r\n  // Introduction to Algorithms (3rd ed.), The MIT Press, ISBN 978-0-262-03384-8\r\n  //\r\n  // DFS(G)\r\n  // 1 for each vertex u ∈ G,V\r\n  // 2     u.color = WHITE\r\n  // 3     u.π = NIL\r\n  // 4 time = 0\r\n  // 5 for each vertex u ∈ G,V\r\n  // 6     if u.color == WHITE\r\n  // 7         DFS-VISIT(G,u)\r\n  //\r\n  // DFS-VISIT(G,u)\r\n  // 1 time = time + 1    // white vertex u has just been discovered\r\n  // 2 u.d = time\r\n  // 3 u.color = GRAY\r\n  // 4 for each v ∈ G.Adj[u]     // explore edge (u,v)\r\n  // 5     if v.color == WHITE\r\n  // 6         v.π = u\r\n  // 7         DFS-VISIT(G,v)\r\n  // 8 u.color = BLACK         // blacken u; it is finished\r\n  // 9 time = time + 1\r\n  // 10 u.f = time\r\n  //\r\n  // TOPOLOGICAL-SORT(G)\r\n  // 1 call DFS(G) to compute finishing times v.f for each vertex v\r\n  // 2 as each vertex is finished, insert it onto front of a linked list\r\n  // 3 return the linked list of vertices\r\n\r\n  const buildList:string[] = [];  // list of ordered vertices--don't need linked list because\r\n                                  // we just want relative ordering\r\n\r\n  const verticesToVisit:ISortVertex = {};\r\n  templates.forEach(function(template) {\r\n    verticesToVisit[template.itemId] = SortVisitColor.White;  // not yet visited\r\n  });\r\n\r\n  // Algorithm visits each vertex once. Don't need to record times or \"from' nodes (\"π\" in pseudocode)\r\n  templates.forEach(function(template) {\r\n    if (verticesToVisit[template.itemId] === SortVisitColor.White) {  // if not yet visited\r\n      visit(template.itemId);\r\n    }\r\n  });\r\n\r\n  // Visit vertex\r\n  function visit(vertexId:string) {\r\n    verticesToVisit[vertexId] = SortVisitColor.Gray;  // visited, in progress\r\n\r\n    // Visit dependents if not already visited\r\n    const template = findTemplateInList(templates, vertexId);\r\n    const dependencies:string[] = template.dependencies || [];\r\n    dependencies.forEach(function (dependencyId) {\r\n      if (verticesToVisit[dependencyId] === SortVisitColor.White) {  // if not yet visited\r\n        visit(dependencyId);\r\n      } else if (verticesToVisit[dependencyId] === SortVisitColor.Gray) {  // visited, in progress\r\n        throw Error(\"Cyclical dependency graph detected\");\r\n      }\r\n    });\r\n\r\n    verticesToVisit[vertexId] = SortVisitColor.Black;  // finished\r\n    buildList.push(vertexId);  // add to end of list of ordered vertices because we want dependents first\r\n  }\r\n\r\n  return buildList;\r\n}\r\n\r\n/**\r\n * Updates the data section of an solution template in AGO.\r\n *\r\n * @param solutionTemplateItem Solution template to update\r\n * @param requestOptions Options for the request\r\n * @return A promise that will resolve with solutionTemplateItem\r\n * @protected\r\n */\r\nfunction updateSolutionTemplateItem (\r\n  solutionTemplateItem: mInterfaces.ISolutionTemplateItem,\r\n  requestOptions: IUserRequestOptions\r\n): Promise<mInterfaces.ISolutionTemplateItem> {\r\n  return new Promise<mInterfaces.ISolutionTemplateItem>((resolve, reject) => {\r\n    // Update the data section of the solution item\r\n    mCommon.updateItemData(solutionTemplateItem.item.id, solutionTemplateItem.data, requestOptions)\r\n    .then(\r\n      () => resolve(solutionTemplateItem),\r\n      () => reject({ success: false })\r\n    )\r\n  });\r\n}\r\n","/*\r\n | Copyright 2018 Esri\r\n |\r\n | Licensed under the Apache License, Version 2.0 (the \"License\");\r\n | you may not use this file except in compliance with the License.\r\n | You may obtain a copy of the License at\r\n |\r\n |    http://www.apache.org/licenses/LICENSE-2.0\r\n |\r\n | Unless required by applicable law or agreed to in writing, software\r\n | distributed under the License is distributed on an \"AS IS\" BASIS,\r\n | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n | See the License for the specific language governing permissions and\r\n | limitations under the License.\r\n */\r\n\r\nimport * as mCommon from \"./itemTypes/common\";\r\nimport * as mInterfaces from \"../src/interfaces\";\r\nimport * as mSolution from \"./solution\";\r\nimport { IUserRequestOptions } from '@esri/arcgis-rest-auth';\r\nimport { IItem } from '@esri/arcgis-rest-common-types';\r\n\r\n// -- Externals ------------------------------------------------------------------------------------------------------//\r\n\r\n/**\r\n * A recursive structure describing the hierarchy of a collection of AGOL items.\r\n */\r\nexport interface IHierarchyEntry {\r\n  /**\r\n   * AGOL item id\r\n   */\r\n  id: string,\r\n  /**\r\n   * Item's dependencies\r\n   */\r\n  dependencies: IHierarchyEntry[]\r\n}\r\n\r\n/**\r\n * Extracts item hierarchy structure from a solution template.\r\n *\r\n * @param templates A collection of AGO item templates\r\n * @return JSON structure reflecting dependency hierarchy of items; shared dependencies are\r\n * repeated; each element of the structure contains the AGOL id of an item and a list of ids of the\r\n * item's dependencies\r\n */\r\nexport function getItemHierarchy (\r\n  templates: mInterfaces.ITemplate[]\r\n): IHierarchyEntry[] {\r\n  const hierarchy:IHierarchyEntry[] = [];\r\n\r\n  // Find the top-level nodes. Start with all nodes, then remove those that other nodes depend on\r\n  const topLevelItemIds = getTopLevelItemIds(templates);\r\n\r\n  // Hierarchically list the children of specified nodes\r\n  function itemChildren(children:string[], accumulatedHierarchy:IHierarchyEntry[]): void {\r\n    // Visit each child\r\n    children.forEach(function (id) {\r\n      const child:IHierarchyEntry = {\r\n        id,\r\n        dependencies: []\r\n      };\r\n\r\n      // Fill in the child's dependencies array with its children\r\n      const template = mSolution.findTemplateInList(templates, id);\r\n      const dependencyIds = template.dependencies;\r\n      if (Array.isArray(dependencyIds) && dependencyIds.length > 0) {\r\n        itemChildren(dependencyIds, child.dependencies);\r\n      }\r\n\r\n      accumulatedHierarchy.push(child);\r\n    });\r\n  }\r\n\r\n  itemChildren(topLevelItemIds, hierarchy);\r\n  return hierarchy;\r\n}\r\n\r\n/**\r\n * Gets a list of the top-level items in a Solution, i.e., the items that no other item depends on.\r\n *\r\n * @param templates A collection of AGO item templates\r\n * @return List of ids of top-level items in Solution\r\n */\r\nexport function getTopLevelItemIds (\r\n  templates: mInterfaces.ITemplate[]\r\n): string[] {\r\n  // Find the top-level nodes. Start with all nodes, then remove those that other nodes depend on\r\n  const topLevelItemCandidateIds:string[] =\r\n    templates.map(\r\n      template => {\r\n        return template.itemId;\r\n      }\r\n    );\r\n  templates.forEach(\r\n    template => {\r\n      (template.dependencies || []).forEach(function (dependencyId) {\r\n        const iNode = topLevelItemCandidateIds.indexOf(dependencyId);\r\n        if (iNode >= 0) {\r\n          // Node is somebody's dependency, so remove the node from the list of top-level nodes\r\n          // If iNode == -1, then it's a shared dependency and it has already been removed\r\n          topLevelItemCandidateIds.splice(iNode, 1);\r\n        }\r\n      });\r\n    }\r\n  );\r\n  return topLevelItemCandidateIds;\r\n}\r\n","/*\r\n | Copyright 2018 Esri\r\n |\r\n | Licensed under the Apache License, Version 2.0 (the \"License\");\r\n | you may not use this file except in compliance with the License.\r\n | You may obtain a copy of the License at\r\n |\r\n |    http://www.apache.org/licenses/LICENSE-2.0\r\n |\r\n | Unless required by applicable law or agreed to in writing, software\r\n | distributed under the License is distributed on an \"AS IS\" BASIS,\r\n | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n | See the License for the specific language governing permissions and\r\n | limitations under the License.\r\n */\r\n\r\nexport * from \"./interfaces\";\r\nexport * from \"./solution\";\r\nexport * from \"./viewing\";\r\n"],"names":["isObject","isString","tslib_1.__assign","tslib_1.__extends","items.createItemInFolder","sharing.setItemAccess","items.updateItem","mCommon.doCommonTemplatizations","mCommon.PLACEHOLDER_SERVER_NAME","mCommon.deTemplatize","adlib.adlib","mCommon.updateItemURL","mCommon.finalCallback","convertItemToTemplate","createItemFromTemplate","mCommon.getUTCTimestamp","groups.createGroup","sharing.shareItemWithGroup","groups.getGroupContent","featureServiceAdmin.createFeatureService","featureServiceAdmin.addToServiceDefinition","mCommon.templatize","extractDependencies","getStoryMapDependencies","getWABDependencies","items.getItem","items.getItemData","items.getItemResources","groups.getGroup","items.createFolder","getSupportedItemTypes","mClassifier.getSupportedItemTypes","PLACEHOLDER_SERVER_NAME","OPS_DASHBOARD_APP_URL_PART","WEBMAP_APP_URL_PART","mCommon.createItemWithData","mClassifier.initItemTemplateFromJSON","mClassifier.convertItemToTemplate","mCommon.updateItemData","mSolution.findTemplateInList"],"mappings":"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"}